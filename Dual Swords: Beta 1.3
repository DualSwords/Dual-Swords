#include <iostream>
#include <string>
#include <iomanip>
#include <ctime>

using namespace std;

int shotgunBullet = 10;
int pistolBullet = 40;
int food = 100;
int myLife = 100;
int lives = 3;
int hoard = 5;
int mazeStep = 0;
int grenade;
int enemyLife;
int money;
int enemyType;
int spoils;
int damage;
int quantity;
int required;
int experience;
int level;
int failsafe;

string answer;
string enemy;
string desiredLocation;
string currentLocation = "Angiru";

bool broadsword = false;
bool shield = false;
bool knife = false;
bool shotgunUpgrade = false;
bool pistolUpgrade = false;
bool broadswordUpgrade = false;
bool shieldUpgrade = false;
bool knifeUpgrade = false;
bool mysteriousCrystal = false;
bool questing = false;
bool dragonQuest = false;

void grenadeLauncher()
{

        launcher:
        srand(time(NULL));                                          
        int damageGrenade = rand() % 10000 + 1689;
        srand(time(NULL));                                          
        int damageBludgeon = rand() % 80 + 50;
    
        cout << "You can do the following with the grenade launcher:" << endl;
        cout << "Bludgeon" << endl;
        
        if (grenade > 0)
        {
            cout << "Grenade" << endl;
        }
    
        cout << "What will you do?" << endl;
        cin >> answer;
        
        if (answer != "grenade" && answer != "bludgeon")
        {
            cout << "That is not a valid command. Please try again." << endl;
            goto launcher;
        }
        
        if (answer == "grenade" && grenade > 0)
        {
            enemyLife -= damageGrenade;
            cout << "You have successfully grenaded the " << enemy << "!" << endl;
            cout << "BOOM!" << endl;
        }
        
        else if (answer == "bludgeon")
        {
            enemyLife -= damageBludgeon;
            cout << "You have successfully bludgeoned the " << enemy << ", and it is now at " << enemyLife << endl;
        }

        else 
        {
            cout << "There has been an error." << endl;
            goto launcher;
        }
    }
    
void shootShotgun()
{
    if (shotgunBullet > 0)
    {
        shotgunBullet -= 1;
        srand(time(NULL));                                          
        int damageShotgun = rand() % 35 + 15;
        
        if (shotgunUpgrade == true)
        {
            damageShotgun *= 2;
        }
        
        enemyLife -= damageShotgun;
        cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
        cout << "You have " << shotgunBullet << " bullets left for the shotgun" << endl;
    }
    
    else if (shotgunBullet <= 0)
    {
        cout << "You are out of bullets." << endl;
    }
}

void shootPistol()
{
    if (pistolBullet > 0)
    {
        pistolBullet -= 1;
        srand(time(NULL));                                          
        int damagePistol = rand() % 20 + 15;
        
        if (pistolUpgrade == true)
        {
            damagePistol *= 2;
        }
        
        enemyLife -= damagePistol;
        cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
        cout << "You have " << pistolBullet << " bullets left for the pistol" << endl;
    }
    
    else if (pistolBullet <= 0)
    {
        cout << "You are out of bullets." << endl;
    }
}

void swingBroadsword()
{
    srand(time(NULL));                                          
    int damageBroadsword = rand() % 80 + 50;
        
    if (broadswordUpgrade == true)
    {
        damageBroadsword *= 2;
    }
        
    enemyLife -= damageBroadsword;
    cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
}

void stabKnife()
{
        srand(time(NULL));                                          
        int damageKnife = rand() % 25 + 15;
        
        if (knifeUpgrade == true)
        {
            damageKnife *= 2;
        }
        
        enemyLife -= damageKnife;
        cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
}

void armor()
{
    if(shield == true)
    {
        damage /= 2;
    }
    
    if(shieldUpgrade == true)
    {
        damage /= 2;
    }
}

void enemyAttack()
{
	enemy:
    if (enemyType == 20)
    {
        cout << "It is now the bosses turn to attack!" << endl;
        cout << "Accept?" << endl;
        cin >> answer;
        srand(time(NULL));                                          
        int damageBoss = rand() % 30 + 10;
        damage = damageBoss;
        armor();
    
        if (answer != " ")
        {
            myLife -= damage;
            cout << "Your health has been reduced to " << myLife << endl;
        }
    }
    
    else if (enemyType < 10)
    {
        cout << "It is now the imps turn to attack!" << endl;
        cout << "Accept?" << endl;
        cin >> answer;
        srand(time(NULL));                                          
        int damageImp = rand() % 2 + 1;
        damage = damageImp;
        damage *= enemyType;
        armor();
    
        if (answer != " ")
        {
            if (damage == 0)
            cout << "The imp missed." << endl;
       
            else 
            {
            	myLife -= damage;
                cout << "Your health has been reduced to " << myLife << endl;
            }
        }
    }
    
    else if (enemyType >= 10 && enemyType < 20)
    {
        cout << "It is now the trolls turn to attack!" << endl;
        cout << "Accept?" << endl;
        cin >> answer;
        srand(time(NULL));                                          
        int damageTroll = rand() % 2 + 1;
        damage = damageTroll;
        damage *= enemyType;
        armor();
    
        if (answer != " ")
        {
            myLife -= damage;
            cout << "Your health has been reduced to " << myLife << endl;
        }
    }
    
    else 
    {
    	cout << "There has been an error. Please try again." << endl;
    	goto enemy;
    }
}

void chooseWeapon()
{
    choose:
    cout << "Your available weapons are:" << endl;
    cout << "Shotgun" << endl;
    cout << "Pistol" << endl;
    
    if (broadsword == true)
    {
        cout << "Broadsword" << endl;
    }
    
    if (knife == true)
    {
        cout << "Knife" << endl;
    }
    
    cout << "What will you use?" << endl;
    cin >> answer;
    
    if (answer != "shotgun" && answer != "pistol" && answer != "broadsword" && answer != "knife")
    {
        cout << "That is not a valid weapon. Please try again." << endl;
        goto choose;
    }
    
    if (answer == "shotgun")
    {
        shootShotgun();
    }
    
    else if (answer == "pistol")
    {
        shootPistol();
    }
    
    else if (answer == "broadsword" && broadsword == true)
    {
        swingBroadsword();
    }
    
    else if (answer == "knife" && knife == true)
    {
        stabKnife();
    }
    
    else
    {
        cout << "That is not a valid weapon, or you have not bought it yet." << endl;
        goto choose;
    }
}   

void levelUp()
{
    if (experience == 0 && level == 0)
    {
        required = 500;
    }
    
    if (experience >= required)
    {
        experience -= required;
        level += 1;
        cout << "You have leveled up! You are now at level " << level << "!" << endl;
        srand(time(NULL));                                          
        int newRequired = rand() % 1000 + 500;
        required += newRequired;
    }
    
    else if (experience < required)
    {
        cout << "You are " << required - experience << " exp away from level " << level + 1 << "." << endl;
    }
    
    
}

void runAway()
{
    enemyLife = -1289;
    food -= 10;
    cout << "You lost 10 food in the scuffle." << endl;
    
}

void eat()
{
    food -= 20;
    myLife += 50;
    cout << "Your health is now at " << myLife << " health, and you have " << food << " food left." << endl;
}

void checkMoney()
{
	if (money <= 0)
	{
		cout << "You are out of money." << endl;
		chooseWeapon();
	}
}

void visitShop()
{
    main_shop:
    cout << "Here, you can buy bullets, food, weapon upgrades, or new weapons." << endl;
    cout << "To go to the bullet shop, the command is 'bullet'." << endl;
    cout << "To go to the upgrade smith, the command is 'upgrade'" << endl;
    cout << "To go to the arms depot, the command is 'weapon'" << endl;
    cout << "To exit to main menu, the command is is 'main'." << endl;
    cin >> answer;
    
    if ((answer != "bullet" || answer != "Bullet") && (answer != "weapon" || answer != "Weapon") && (answer != "upgrade" || answer != "Upgrade") && (answer != "food" || answer != "Food") && (answer != "main" || answer != "Main"))
    {
        cout << "That is an invalid command. Please press one of the ones specified." << endl;
        goto main_shop;
    }
    
    if (answer == "bullet" || answer == "Bullet")
    {
        bullet_shop:
        cout << "Shotgun bullets are 10 bullets for 50 gold coins." << endl;
        cout << "Pistol bullets are 40 bullets for 75 gold coins." << endl;
        cout << "Would you like to buy pistol or shotgun bullets?" << endl;
        cin >> answer;
            
        if ((answer != "pistol" || answer != "Pistol") && (answer != "shotgun" || answer != "Shotgun") && (answer != "main" || answer != "Main"))
        {
            cout << "That is an invalid operation. Please try again." << endl;
            goto bullet_shop;
        }
        
        if (answer == "shotgun" || answer == "Shotgun")
        {
            shotgun_bullet_shop:
            cout << "How many bullets would you like to buy? You can buy 10, 20, or 30 bullets at a time." << endl;
            cin >> quantity;
            
            if (quantity != 10 && quantity != 20 && quantity != 30)
            {
                cout << "That is an invalid number. Please buy only 10, 20, or 30 bullets." << endl;
                checkMoney();
                goto shotgun_bullet_shop;
            }
            
            if (quantity == 10)
            {
                shotgunBullet += 10;
                money -= 50;
                cout << "You now have " << shotgunBullet << " shotgun bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_1:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_1;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto shotgun_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
           		
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_1;
           		}
            }
            
            else if (quantity == 20)
            {
                shotgunBullet += 20;
                money -= 100;
                cout << "You now have " << shotgunBullet << " shotgun bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_2:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_2;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto shotgun_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
           		
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_2;
           		}
            }
            
            else if (quantity == 30)
            {
                shotgunBullet += 30;
                money -= 150;
                cout << "You now have " << shotgunBullet << " shotgun bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_3:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_3;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto shotgun_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
           		
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_3;
           		}
            }
            
            else
            {
                cout << "That is an invalid number. Please buy only 10, 20, or 30 bullets." << endl;
                goto bullet_shop;
            }
        }
        
        else if (answer == "pistol" || answer == "Pistol")
        {
            pistol_bullet_shop:
            cout << "How many bullets would you like to buy? You can buy 40, 80, or 120 bullets at a time." << endl;
            cin >> quantity;
            
            if (quantity != 40 && quantity != 80 && quantity != 120)
            {
                cout << "That is an invalid number. Please buy only 40, 80, or 120 bullets." << endl;
                goto pistol_bullet_shop;
            }
            
            if (quantity == 40)
            {
                pistolBullet += 40;
                money -= 75;
                cout << "You now have " << pistolBullet << " pistol bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_4:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_4;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto pistol_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
           		
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_4;
           		}
            }
            
            else if (quantity == 80)
            {
                pistolBullet += 80;
                money -= 150;
                cout << "You now have " << pistolBullet << " pistol bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_5:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_5;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto pistol_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
           		
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_5;
           		}
            }
            
            else if (quantity == 120)
            {
                pistolBullet += 120;
                money -= 225;
                cout << "You now have " << pistolBullet << " pistol bullets, and " << money << " gold coins." << endl;
                checkMoney();
                bullets_6:
                cout << "Would you like to purchase more bullets?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto bullets_6;
                }
                
                if (answer == "yes" || answer == "Yes")
                goto pistol_bullet_shop;
                
                else if (answer == "no" || answer == "No")
                goto bullet_shop;
                
           		else 
           		{
           			cout << "That is an invalid answer. Please try again." << endl;
           			goto bullets_6;
           		}
            }
            
            else
            {
                cout << "That is an invalid number. Please buy only 40, 80, or 120 bullets." << endl;
                goto pistol_bullet_shop;
            }
        }
        
        else if (answer == "main" || answer == "Main")
        {
        goto main_shop;
        }
        
        else 
        {
            cout << "That is an invalid answer. Please try again." << endl;
            goto bullet_shop;
        }
    }
    
    if (answer == "food" || answer == "Food")
    {
        food_shop:
        cout << "How much food would you like to buy? You can buy 20, 40, or 60 food at a time." << endl;
        cout << "20 food costs 50 gold coins." << endl;
        cin >> quantity;
            
        if (quantity != 20 && quantity != 40 && quantity != 60)
        {
            cout << "That is an invalid number. Please buy only 20, 40, or 60 food." << endl;
            goto food_shop;
        }
            
        if (quantity == 20)
        {
            food += 20;
            money -= 50;
            cout << "You now have " << food << " food, and " << money << " gold coins." << endl;
            checkMoney();
            food_1:
                cout << "Would you like to purchase more food?" << endl;
                cin >> answer;
                
                if ((answer != "yes" || answer != "Yes") && (answer != "no" || answer != "No"))
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto food_1;
                }
                
                if (answer == "yes" || answer == "Yes")
                {
                goto food_shop;
                }
                
                else if (answer == "no" || answer == "No")
                {
                goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto food_1;
                }
        }
            
        else if (quantity == 40)
        {
            food += 40;
            money -= 100;
            cout << "You now have " << food << " food, and " << money << " gold coins." << endl;
            checkMoney();
            food_2:
                cout << "Would you like to purchase more food?" << endl;
                cin >> answer;
                
                if (answer != "yes" && answer != "no")
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto food_2;
                }
                
                if (answer == "yes")
                {
                    goto food_shop;
                }
                
                else if (answer == "no")
                {
                    goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto food_2;
                }
        }
            
        else if (quantity == 60)
        {
            food += 60;
            money -= 150;
            cout << "You now have " << food << " food, and " << money << " gold coins." << endl;
            checkMoney();
            food_3:
            cout << "Would you like to purchase more food?" << endl;
                cin >> answer;
                
                if (answer != "yes" && answer != "no")
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto food_3;
                }
                
                if (answer == "yes")
                {
                    goto food_shop;
                }
                
                else if (answer == "no")
                {
                    goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto food_3;
                }
        }
            
        else
        {
            cout << "That is an invalid number. Please buy only 20, 40, or 60 food." << endl;
            goto food_shop;
        }
    }
    
    if (answer == "upgrade" || answer == "Upgrade")
    {
        upgrade_shop:
        
        if (1 == 1)
        {
            if (pistolUpgrade == false)
            {
        	    cout << "There is a pistol upgrade for 1500 gold coins." << endl;
            }
        
            if (shotgunUpgrade == false)
            {
            	cout << "There is a shotgun upgrade for 2000 gold coins." << endl;
            }
            
            if (broadsword == true && broadswordUpgrade == false)
            {
            	cout << "There is a broadsword upgrade for 8000 gold coins." << endl;
            }
            
            if (knife == true && knifeUpgrade == false)
            {
            	cout << "There is a knife upgrade for 5000 gold coins." << endl;
            }
            
            if (shield == true && shieldUpgrade == false)
            {
            	cout << "There is a shield upgrade for 6000 gold coins." << endl;
            }
        
            cout << "What will you buy?" << endl;
            cin >> answer;
        }
        
        if (answer != "shotgun" && answer != "pistol" && answer != "broadsword" && answer != "shield" && answer != "knife" && answer != "main")
        {
            cout << "That is an invalid answer. Please try again." << endl;
            goto upgrade_shop;
        }
        
        if (answer == "shotgun")
        {
            if (answer == "shotgun" && shotgunUpgrade == false && money >= 2000)
            {
        	    shotgunUpgrade = true;
        	    money -= 2000;
        	    cout << "You have bought the shotgun upgrade! It will now do twice as much damage!" << endl;
        	    checkMoney();
        	    goto upgrade_shop;
            }
            
            else if (money <= 2000)
            {
                cout << "You do not have enough money to buy this." << endl;
                goto upgrade_shop;
            }
        }
        
        else if (answer == "pistol")
        {
            
            if (answer == "pistol" && pistolUpgrade == false && money >= 1500)
            {
        	    shotgunUpgrade = true;
        	    money -= 1500;
        	    cout << "You have bought the pistol upgrade! It will now do twice as much damage!" << endl;
        	    checkMoney();
        	    goto upgrade_shop;
            }
        
            else if (money <= 1500)
            {
                cout << "You do not have enough money to buy this." << endl;
                goto upgrade_shop;
            }
        }
        
        else if (answer == "broadsword")
        {
            
            if (answer == "broadsword" && broadswordUpgrade == false && money >= 8000)
            {
        	    broadswordUpgrade = true;
        	    money -= 8000;
        	    cout << "You have bought the broadsword upgrade! It will now do twice as much damage!" << endl;
        	    checkMoney();
        	    goto upgrade_shop;
            }
        
            else if (money <= 8000)
            {
                cout << "You do not have enough money to buy this." << endl;
                goto upgrade_shop;
            }
        }
        
        else if (answer == "knife")
        {
            
            if (answer == "knife" && knifeUpgrade == false && money >= 5000)
            {
        	    knifeUpgrade = true;
        	    money -= 5000;
        	    cout << "You have bought the knife upgrade! It will now do twice as much damage!" << endl;
        	    checkMoney();
        	    goto upgrade_shop;
            }
        
            else if (money <= 5000)
            {
                cout << "You do not have enough money to buy this." << endl;
                goto upgrade_shop;
            }
        }
        
        else if (answer == "shield")
        {
            
            if (answer == "shield" && shieldUpgrade == false && money >= 5000)
            {
        	    shieldUpgrade = true;
        	    money -= 5000;
        	    cout << "You have bought the shield upgrade! It will now block twice as much damage!" << endl;
        	    checkMoney();
        	    goto upgrade_shop;
            }
        
            else if (money <= 5000)
            {
                cout << "You do not have enough money to buy this." << endl;
                goto upgrade_shop;
            }
        }
        
        else if (answer == "main")
        {
            goto main_shop;
        }
        
        else
        {
            cout << "That is an invalid answer. Please try again." << endl;
            goto upgrade_shop;
        }
    }

    if (answer == "weapon" || answer == "Weapon")
    {
        weapons_shop:
        
        if (1 == 1)
        {
            if (!shield && !shieldUpgrade)
            {
                cout << "You can buy a shield for 2500 gold coins." << endl;
            }
            
            if (!broadsword && !broadswordUpgrade)
            {
                cout << "You can buy a broadsword for 5000 gold coins." << endl;
            }
            
            if (!knife && !knifeUpgrade)
            {
                cout << "You can buy a knife for 3000 gold coins." << endl;
            }
            
            cout << "What will you buy?" << endl;
            cin >> answer;
            
            if (answer != "broadsword" && answer != "shield" && answer != "knife" && answer != "main")
            {
                cout << "That is an invalid answer. Please try again." << endl;
                goto weapons_shop;
            }
        }
        
        if (answer == "broadsword")
        {
            if (answer == "broadsword" && !broadsword && !broadswordUpgrade && money >= 5000)
            {
                broadsword = true;
                money -= 5000;
                cout << "You have bought the broadsword! It does a ton of damage!" << endl;
                checkMoney();
                weapon_1:
                cout << "Would you like to purchase another weapon?" << endl;
                cin >> answer;
                
                if (answer != "yes" && answer != "no")
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto weapon_1;
                }
                
                if (answer == "yes")
                {
                goto weapons_shop;
                }
                
                else if (answer == "no")
                {
                goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_1;
                }
            }
                
                
            
    }
    
        if (answer == "knife")
        {
            if (answer == "knife" && !knife && !knifeUpgrade && money >= 3000)
            {
                knife = true;
                money -= 3000;
                checkMoney();
                cout << "You have bought the knife! It does a lot of damage!" << endl;
                weapon_2:
                cout << "Would you like to purchase another weapon?" << endl;
                cin >> answer;
                
                if (answer != "yes" && answer != "no")
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto weapon_2;
                }
                
                if (answer == "yes")
                {
                goto weapons_shop;
                }
                
                else if (answer == "no")
                {
                goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_2;
                }
            }
}

        if (answer == "shield")
        {
            if (answer == "shield" && !shield && !shieldUpgrade && money >= 2500)
            {
                shield = true;
                money -= 2500;
                cout << "You have bought the shield! It blocks a lot of  damage!" << endl;
                checkMoney();
                weapon_3:
                cout << "Would you like to purchase another weapon?" << endl;
                cin >> answer;
                
                if (answer != "yes" && answer != "no")
                {
                	cout << "That is an invalid answer. Please try again." << endl;
                	goto weapon_3;
                }
                
                if (answer == "yes")
                {
                goto weapons_shop;
                }
                
                else if (answer == "no")
                {
                goto main_shop;
                }
                
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_3;
                }
            }
        }
        
        if (answer == "main")
        {
            goto main_shop;
        }
    }
}

void ightormeld()
{
    cout << "Welcome to the ruins of Ightormeld." << endl 
        cout << "Will you begin your quest by walking into the courtyard?" << endl;
        cout << "Will you heal your life?" << endl;
        cout << "Or will you travel back to Warkim?" << endl;
        ruins:
        cout << "What will you do?" << endl;
        cout << "Quest" << endl;
        cout << "Heal" << endl;
        cout << "Travel" << endl;
        cin >> answer;
        
        if ((answer != "quest" || answer != "Quest") && (answer != "heal" || answer != "Heal") && (answer != "travel" || answer != "Travel"))
        {
            cout << "That is not a valid command. Please try again." << endl;
            goto ruins;
        }
        
        if (answer == "quest" || answer == "Quest")
        {
        }
        
        else if (answer == "heal" || answer == "Heal")
        {
            myLife = 100;
            cout << "Your life is now at " << myLife << "." << endl;
            goto ruins;
        }
        
        else if (answer == "travel" || answer == "Travel")
        {
            currentLocation = "Warkim";
        }
void travel()
{
    travel:
    cout << "You can travel to these places:" << endl;
    
    if (currentLocation != "Thylas" && currentLocation != "Zhyfrod")
    {
        cout << "Thylas" << endl;
    }
    
    if (currentLocation == "Warkim")
    {
        cout << "The ruins of Ightormeld" << endl;
    }
    
    if (currentLocation != "Kinoll-rad")
    {
        cout << "Kinoll-rad" << endl;
    }
    
    if (currentLocation != "Warkim" && currentLocation != "Zhyfrod")
    {
        cout << "Warkim" << endl;
    }
    
    if (currentLocation != "Zhyfrod" && currentLocation == "Kinoll-rad")
    {
        cout << "Zhyfrod" << endl;
    }
    
    if (currentLocation != "Angiru" && currentLocation != "Zhyfrod")
    {
        cout << "Angiru" << endl;
    }
    
    if (currentLocation != "Driskelang" && currentLocation != "Zhyfrod")
    {
        cout << "Driskelang" << endl;
    }
    
    if (currentLocation == "Zhyfrod" && dragonQuest == true)
    {
        cout << "Quest" << endl;
    }
    
    cout << "Where would you like to travel to?" << endl;
    cin >> desiredLocation;
    
    if ((desiredLocation == "thylas" || desiredLocation == "Thylas") && currentLocation != "Thylas")
    {
        cout << "Welcome to the village of Thylas!" << endl;
        currentLocation = "Thylas";
        
        if (mazeStep == 4)
        {
            mazeStep = 5;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if ((desiredLocation == "angiru" || desiredLocation == "Angiru") && currentLocation != "Angiru")
    {
        cout << "Welcome to the village of Angiru!" << endl;
        currentLocation = "Angiru";
        
        if (mazeStep == 2)
        {
            mazeStep = 3;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if ((desiredLocation == "quest" || desiredLocation == "Quest") && currentLocation != "Lair")
    {
        cout << "Welcome to the lair of the dragon Vororokth!" << endl;
        currentLocation = "Lair";
    }
    
    else if ((desiredLocation == "warkim" || desiredLocation == "Warkim") && currentLocation != "Warkim")
    {
        currentLocation = "Warkim";
        warkim:
        cout << "Welcome to the village of Warkim!" << endl;
        
        if (mazeStep == 3)
        {
            mazeStep = 4;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if ((desiredLocation == "zhyfrod" || desiredLocation == "Zhyfrod") && currentLocation != "Zhyfrod" && currentLocation == "Kinoll-rad")
    {
        cout << "Welcome to the city of Zhyfrod, the capital of Creturon!" << endl;
        currentLocation = "Zhyfrod";
        
        if (mazeStep == 6 && dragonQuest == false)
        {
            cout << "You have completed the maze. If you wish to unlock a new quest, type 'Vororokth'" << endl;
            cin >> answer;
            
            if (answer != "vororokth" && answer != "Vororokth")
            {
                cout << "You inability to follow directions made you forget where the new quest is." << endl;
                mazeStep = 7;
            }
            
            if (answer == "vororokth" || answer == "Vororokth")
            {
                dragonQuest = true;
                cout << "You can now play the quest 'The Lair of the Beast'" << endl;
            }
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if ((desiredLocation == "driskelang" || desiredLocation == "Driskelang") && currentLocation != "Driskelang")
    {
        cout << "Welcome to the village of Driskelang!" << endl;
        currentLocation = "Driskelang";
        
        if (mazeStep == 1)
        {
            mazeStep = 2;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if ((desiredLocation == "kinoll-rad" || desiredLocation == "Kinoll-rad") && currentLocation != "Kinoll-rad")
    {
        cout << "Welcome to the coastal village of Kinoll-rad!" << endl;
        currentLocation = "Kinoll-rad";
        
        if (mazeStep == 5)
        {
            mazeStep = 6;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (desiredLocation == "maze" || desiredLocation == "Maze" && currentLocation == "Warkim")
    {
        cout << "That is either not a valid location, or you cannot go there from your current position." << endl;
        mazeStep = 1;
        goto travel;
    }
    
    else if (desiredLocation == "Ightormeld" || desiredLocation == "ightormeld")
    {
        ightormeld();
        
        if (currentLocation == "Warkim")
        {
            goto warkim;
        }
    }
   
    else 
    {
        cout << "That is either not a valid location, or you cannot go there from your current position." << endl;
        goto travel;
    }
}

void reforge()
{
    if (currentLocation == "Zhyford" && mysteriousCrystal == true)
    {
    }
}

void myTurn()
{
    if (enemyLife == failsafe)
    cout << "You have encountered a " << enemy << "! It is at " << enemyLife << " health!" << endl;
    fight:
    cout << "What would you like to do?" << endl;
    cout << "Fight" << endl;
    
    if (food >= 20)
    {
        cout << "Eat" << endl;
        cout << "Run" << endl;
    }
    
    cin >> answer;
    
    if (answer != "eat" && answer != "Eat" && answer != "run" && answer != "Run" && answer != "fight" && answer != "Fight")
    {
        cout << "That is not a valid command." << endl;
        goto fight;
    }
    
    if ((answer == "eat" || answer == "Eat") && food >= 20)
    {
        eat();
    }
    
    else if ((answer == "run" || answer == "Run") && food >= 20)
    {
        runAway();
    }
    
    else if (answer == "fight" || answer == "Fight")
    {
        chooseWeapon();
    }
    
    else 
    {
        cout << "There has been an error. Please try again." << endl;
        goto fight;
    }
}

void town()
{
    town:
    cout << "What would you like to do?" << endl;
    cout << "Fight" << endl;
    cout << "Heal" << endl;
    cout << "Travel" << endl;
    
    if (money >= 500)
    {
        cout << "Shop" << endl;
    }
    
    cin >> answer;
    
    if (answer != "shop" && answer != "Shop" && answer != "fight" && answer != "Fight" && answer != "heal" && answer != "Heal" && answer != "travel" && answer != "Travel")
    {
        cout << "That is not a valid command." << endl;
        goto town;
    }
    
    if ((answer == "shop" || answer == "Shop") && money >= 500)
    {
        visitShop();
        goto town;
    }
    
    else if (answer == "fight" || answer == "Fight")
    {
        myTurn();
    }
    
    else if (answer == "heal" || answer == "Heal")
    {
        myLife = 100;
        goto town;
    }  
    
    else if (answer == "travel" || answer == "Travel")
    {
        travel();
        goto town;
    }
    
    else
    {
        cout << "There has been an error. Please try again." << endl;
        goto town;
    }
}   

void spoilsOfWar()
{
    srand(time(NULL));                                          
    int spoils = rand() % 5 + 1;
    experience = (spoils * enemyType + experience);
    switch (spoils)
    {
        case 1:
        money += 10 * (enemyType);
        cout << "You got " << 5*enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
        
        if (enemyType == 20)
        {
            grenade += 1;
            cout << "You got 1 grenade!" << endl;
        }
        break;
        
        case 2:
        food += 10 * (enemyType);
        cout << "You got " << 10*enemyType << " food! You now have " << food << " food!" << endl;
        
        if (enemyType == 20)
        {
            grenade += 1;
            cout << "You got 1 grenade!" << endl;
        }
        experience += 10 * (enemyType);
        levelUp();
        break;
        
        case 3: 
        money += 5 * (enemyType);
        cout << "You got " << 5*enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
        
        if (enemyType == 20)
        {
            grenade += 1;
            cout << "You got 1 grenade!" << endl;
        }
        experience += 5 * (enemyType);
        levelUp();
        break;
        
        case 4:
        shotgunBullet += 1 * (enemyType);
        pistolBullet += 4 * (enemyType);
        cout << "You got " << 4 * enemyType << " pistol bullets and " << 1 * enemyType << " shotgun bullets!" << endl;
        
        if (enemyType == 20)
        {
            grenade += 1;
            cout << "You got 1 grenade!" << endl;
        }
        experience +=  spoils * (enemyType);
        levelUp();
        break;
        
        case 5:
        money += 15 * (enemyType);
        cout << "You got " << 5*enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
        
        if (enemyType == 20)
        {
            grenade += 1;
            cout << "You got 1 grenade!" << endl;
        }
        experience += 15 * (enemyType);
        levelUp();
        break;
    }
}
  
void gameOver()
{
    cout << "You have 0 life remaining. You are now dead." << endl;
    cout << "GAME OVER!" << endl;
    
    if (lives > 0)
    {
        cout << "Continue? It will cost 100 gold coins, along with one of your " << lives << " live(s) left."<< endl;
        cin >> answer;
    
        if (answer == "yes" || answer == "Yes")
        {
            lives -= 1;
            myLife = 100;
            int main();
        }
        
        else
        {
            return;
        }
    }
    
    else
    {
        cout << "You have 0 lives remaining. Type any key except 'no' to continue your adventure at Ingiru" << endl;
        cin >> answer;
        
        if (answer != "no")
        {
            currentLocation = "Angiru";
            lives = 3;
            myLife = 100;
            int main();
        }
    }
}

void enemyPicker()
{
    enemyLife = 1;
    srand(time(NULL));                                          
    int enemyChooser = rand() % 20 + 1;
    enemyType = enemyChooser;
    
    if (enemyType == 20)
    {
        enemy = "dragon";
        enemyLife = 400;
    }

    else if (enemyType < 10)
    {
        enemy = "imp";
        enemyLife = 10 * enemyType;
    }
    
    else if (enemyType >= 10 && enemyType < 20)
    {
        enemy = "troll";
        enemyLife = 20 * enemyType;
    }
    failsafe = enemyLife;
}

void fightSequence()
{
    attack:
    myTurn();
    
    if (enemyLife <= 0)
    {
        if (enemyLife != -1289)
        {
            spoilsOfWar();
            hoard -= 1;
        }
        enemyPicker();
        
        if (hoard == 0)
        {
            hoard = 5;
            town();
        }
        goto attack;
    }
    
    else if (enemyLife > 0)
    {
        cout << "hi";
            enemyAttack();
        if (myLife <= 0)
        {
            gameOver();
        }
    }
} 

int main()
{
    if (lives == 3)
    {
        cout << "Welcome to the game Dual Swords: An RPG Legend." << endl;
        cout << "To begin the game, in the town of Angiru, press any key, then enter." << endl;
        cin >> answer;
        
        if (answer != " ")
        {
            enemyPicker();
            town();
            fightSequence();
        }
    }
} 
