#include <iostream>
#include <string>
#include <ctime>
#include <cstdlib>
#include <cstdio>
#include <fstream>

using namespace std;

// These are the variables I use to store the amount of materials the player has

int arrow = 24;
int food = 100;

// These are the variables I use for the player's life and the enemy's life

int maxLife = 250;
int myLife = 250;
int enemyLife;

// These are used to tell how much damage has been dealt by the player and the enemy

int myDamage;
int damage;

// This is used to tell how many enemies are required to be fought

int hoard = 5;

// This is used to tell life gained from druid attack

int heal;

// This is used to tell how many steps are left in the maze

int mazeStep = 0;

// This is used to tell how much money there is

int money;

// This is used to tell what kind of enemy it is

int enemyType;

// This is used to tell how much loot is gotten from killing the enemy

int spoils;

// This is used to deal with numeric imputs

int quantity;

// These are used to tell the amount of experience required for the next level up

int warriorRequired = 100;
int archerRequired = 100;
int wizardRequired = 100;
int druidRequired = 100;

// These are the variables I use to store the amount of experience for the different classes

int warriorExperience;
int archerExperience;
int wizardExperience;
int druidExperience;

// These are the variable I use to store the experience gained from a fight

int warriorNew;
int archerNew;
int wizardNew;
int druidNew;

// These are the variables I use to store the different levels for all of the classes

int warriorLevel = 1;
int archerLevel = 1;
int wizardLevel = 1;
int druidLevel = 1;

// This is used to tell whether or not to output the encounter for an enemy

int failsafe;

// These booleans are for use of the forging of weapons in the Warrior Class

int shortSwordForge = 3;
int longSwordForge = 3;
int broadswordForge = 3;
int dualSwordForge = 3;

// These are the forging levels for the Archer Class Weapons

int shortBowForge = 3;
int recurveBowForge = 3;
int longBowForge = 3;
int kingsBowForge = 3;

// These are the forging levels for the Wizard Class Weapons

int woodenWandForge = 3;
int ivoryWandForge = 3;
int platedWandForge = 3;
int legendaryWandForge = 3;

// Thes are the forging levels for the Druid Class Weapons

int woodenStaffForge = 3;
int imbuedStaffForge = 3;
int natureStaffForge = 3;
int masterStaffForge = 3;

// This is used to tell the damage boost on the Dual Sword

int reducedDamage;

// This is used to tell if an enemy is an elemental or not

int elemental;

// This is used to tell how many drinks you have had

int drinks;

// This is used to tell how many full magical restores the wizard can undergo

int magicRestore = 3;

// This is used to tell the multiplier for the wizard

int effectiveness;

// This boolean is used for the chosen class

string classGame;

// This boolean is the one where user alphabetic inputs are stored

string answer;

// This boolean is used to dignify the type of enemy

string enemy;

// These booleans are the ones used for the travelling function

string desiredLocation;
string currentLocation = "Angiru";

// This boolean is used for the element of the enemy

string element;

// These booleans are the Warrior Class Weapon Elements

string shortSwordElement = "none";
string longSwordElement = "none";
string broadswordElement = "none";
string dualSwordElement = "none";

// These booleans are the Archer Class Weapon Elements

string shortBowElement = "none";
string recurveBowElement = "none";
string longBowElement = "none";
string kingsBowElement = "none";

// These booleans are the Wizard Class Weapon Elements

string woodenWandElement = "none";
string ivoryWandElement = "none";
string platedWandElement = "none";
string legendaryWandElement = "none";

// These booleans are the Druid Class Weapon Elements

string woodenStaffElement = "none";
string imbuedStaffElement = "none";
string natureStaffElement = "none";
string masterStaffElement = "none";


// These booleans are the dungeon completion indicators

bool d1clear = false;
bool d2clear = false;
bool d3clear = false;
bool d4clear = false;
bool d5clear = false;
bool d6clear = false;
bool d7clear = false;
bool d8clear = false;

// These booleans are the spells for the Wizard Class

bool spellOfHealing = false;
bool spellOfDamage = true;
bool spellOfDexterity = false;
bool spellOfDefense = false;
bool spellOfExplosiveness = false;

// These booleans are for use of the weapons for the Warrior Class

bool shortSword = false;
bool longSword = false;
bool broadsword = false;
bool dualSword = false;

// These booleans are the Archer Class Weapons

bool shortBow = false;
bool recurveBow = false;
bool longbow = false;
bool kingsBow = false;

// These booleans are the Wizard Class Weapons

bool woodenWand = false;
bool ivoryWand = false;
bool platedWand = false;
bool legendaryWand = false;

// These booleans are the Druid Class Weapons

bool woodenStaff = false;
bool imbuedStaff = false;
bool natureStaff = false;
bool masterStaff = false;

// These booleans are for use of the weapons for the Warrior Class


bool shortSwordUpgrade = false;
bool longSwordUpgrade = false;
bool broadswordUpgrade = false;
bool dualSwordUpgrade = false;

// These booleans are the Archer Class Weapon Upgrades

bool shortBowUpgrade = false;
bool recurveBowUpgrade = false;
bool longbowUpgrade = false;
bool kingsBowUpgrade = false;

// These booleans are the Wizard Class Weapon Upgrades

bool woodenWandUpgrade = false;
bool ivoryWandUpgrade = false;
bool platedWandUpgrade = false;
bool legendaryWandUpgrade = false;

// These booleans are the Druid Class Weapon Upgrades

bool woodenStaffUpgrade = false;
bool imbuedStaffUpgrade = false;
bool natureStaffUpgrade = false;
bool masterStaffUpgrade = false;

// These are the armor pieces that can be bought buy the warrior

bool helm = false;
bool chainmail = false;
bool chestplate = false;
bool greaves = false;
bool gauntlets = false;
bool spaulders = false;
bool shield = false;

// These are the crystals used to make the Forging Trinket

bool ightormeldCrystal = false;
bool gorothGem = false;
bool mesedtJewel = false;

// These are the shards that are used to make the top tier weapon for any class

bool shardOne = false;
bool shardTwo = false;
bool shardThree = false;
bool shardFour = false;

// These booleans are the elemental stones that are used to create the Elemental Forging Trinket

bool waterStone = false;
bool fireStone = false;
bool airStone = false;
bool earthStone = false;

// These booleans are used for reforging

bool forgingTrinket = false;
bool elementalForgingTrinket = false;

// These booleans are used to distinguish whether or not a quest is active, or if the final is able to be travelled to 

bool questing = false;
bool dragonQuest = false;

// This boolean is used to tell if the game has been started before

bool play = false;

// This is used to tell whether or not the played will continue the game

bool quit = false;


void help()
{
    cout << endl;
    cout << "Adventuring is going out and fighting enemies." << endl;
    cout << "Healing puts your health at full" << endl;
    cout << "Reforging is recrafting your weapons to make them stronger." << endl;
    cout << "The tavern is a place where you can gamble, talk to people, or buy a drink" << endl;
    cout << "In any interface, like the reforging, type town to go back to town." << endl;
    cout << "More will be added in the future." << endl;
    cout << endl;
}

void convert()
{
    getline(cin, answer);
    for (int i = 0; i < 10000; i++)
    {
        if ('a' <= answer[i] && answer[i] <= 'z')
        {
           answer[i] = char(((int)answer[i]) - 32);
        }
        
        if ('A' <= answer[i] && answer[i] <= 'Z')
        {
           answer[i] = char(((int)answer[i]) + 32);
        }
    }
    
    if (answer == "exit" || answer == "quit")
    {
        quit = true;;
        return;
    }
    
    if (answer == "help")
    {
        help();
    }
}

void myElement()
{
    if (classGame == "warrior")
    {
        if (answer == "short sword")
        {
            if (shortSwordElement == "fire")
            {
                myDamage += 25;
            }
            
            if (shortSwordElement == "water")
            {
                damage -= 25;
            }
            
            if (shortSwordElement == "earth")
            {
                myDamage += 15;
                damage -= 10;
            }
            
            if (shortSwordElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 8 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "long sword")
        {
            if (longSwordElement == "fire")
            {
                myDamage += 40;
            }
            
            if (longSwordElement == "water")
            {
                damage -= 40;
            }
            
            if (longSwordElement == "earth")
            {
                myDamage += 35;
                damage -= 15;
            }
            
            if (longSwordElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 7 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "broadsword")
        {
            if (broadswordElement == "fire")
            {
                myDamage += 60;
            }
            
            if (broadswordElement == "water")
            {
                damage -= 50;
            }
            
            if (broadswordElement == "earth")
            {
                myDamage += 50;
                damage -= 10;
            }
            
            if (broadswordElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 6 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "dual sword")
        {
            if (dualSwordElement == "fire")
            {
                myDamage += 100;
            }
            
            if (dualSwordElement == "water")
            {
                damage -= 80;
            }
            
            if (dualSwordElement == "earth")
            {
                myDamage += 60;
                damage -= 30;
            }
            
            if (dualSwordElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 4 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
    }
    
    if (classGame == "archer")
    {
        if (answer == "short bow")
        {
            if (shortBowElement == "fire")
            {
                myDamage += 10;
            }
            
            if (shortBowElement == "water")
            {
                damage -= 10;
            }
            
            if (shortBowElement == "earth")
            {
                myDamage += 5;
                damage -= 5;
            }
            
            if (shortBowElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 8 + 1;
                
                if (myAgility == 8)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "recurve bow")
        {
            if (recurveBowElement == "fire")
            {
                myDamage += 20;
            }
            
            if (recurveBowElement == "water")
            {
                damage -= 20;
            }
            
            if (recurveBowElement == "earth")
            {
                myDamage += 10;
                damage -= 10;
            }
            
            if (recurveBowElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 7 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "longbow")
        {
            if (longBowElement == "fire")
            {
                myDamage += 30;
            }
            
            if (longBowElement == "water")
            {
                damage -= 30;
            }
            
            if (longBowElement == "earth")
            {
                myDamage += 20;
                damage -= 10;
            }
            
            if (longBowElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 6 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "kings bow")
        {
            if (kingsBowElement == "fire")
            {
                myDamage += 70;
            }
            
            if (kingsBowElement == "water")
            {
                damage -= 70;
            }
            
            if (kingsBowElement == "earth")
            {
                myDamage += 40;
                damage -= 30;
            }
            
            if (kingsBowElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 4 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
    }
    
    if (classGame == "wizard")
    {
        if (answer == "wooden wand")
        {
            if (woodenWandElement == "fire")
            {
                effectiveness += 2;
            }
            
            if (woodenWandElement == "water")
            {
                damage -= 10;
            }
            
            if (woodenWandElement == "earth")
            {
                effectiveness += 1;
            }
            
            if (woodenWandElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 8 + 1;
                
                if (myAgility == 8)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "ivory wand")
        {
            if (ivoryWandElement == "fire")
            {
                effectiveness += 3;
            }
            
            if (ivoryWandElement == "water")
            {
                damage -= 20;
            }
            
            if (ivoryWandElement == "earth")
            {
                effectiveness += 1;
                damage -= 10;
            }
            
            if (ivoryWandElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 7 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "plated wand")
        {
            if (platedWandElement == "fire")
            {
                effectiveness += 3;
            }
            
            if (platedWandElement == "water")
            {
                damage -= 40;
            }
            
            if (platedWandElement == "earth")
            {
                effectiveness += 1;
                damage -= 20;
            }
            
            if (platedWandElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 6 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "legendary wand")
        {
            if (legendaryWandElement == "fire")
            {
                effectiveness += 6;
            }
            
            if (legendaryWandElement == "water")
            {
                damage -= 70;
            }
            
            if (legendaryWandElement == "earth")
            {
                effectiveness += 2;
                damage -= 40;
            }
            
            if (legendaryWandElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 4 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
    }
    
    if (classGame == "druid")
    {
        if (answer == "wooden staff")
        {
            if (woodenStaffElement == "fire")
            {
                myDamage += 5;
            }
            
            if (woodenStaffElement == "water")
            {
                damage -= 10;
            }
            
            if (woodenStaffElement == "earth")
            {
                myDamage += 3;
                damage -= 5;
            }
            
            if (woodenStaffElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 8 + 1;
                
                if (myAgility == 8)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "imbued staff")
        {
            if (imbuedStaffElement == "fire")
            {
                myDamage += 20;
            }
            
            if (imbuedStaffElement == "water")
            {
                damage -= 20;
            }
            
            if (imbuedStaffElement == "earth")
            {
                myDamage += 10;
                damage -= 10;
            }
            
            if (imbuedStaffElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 7 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "nature staff")
        {
            if (natureStaffElement == "fire")
            {
                myDamage += 30;
            }
            
            if (natureStaffElement == "water")
            {
                damage -= 30;
            }
            
            if (natureStaffElement == "earth")
            {
                myDamage += 20;
                damage -= 20;
            }
            
            if (natureStaffElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 6 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
        
        if (answer == "master staff")
        {
            if (masterStaffElement == "fire")
            {
                myDamage += 50;
            }
            
            if (masterStaffElement == "water")
            {
                damage -= 70;
            }
            
            if (masterStaffElement == "earth")
            {
                myDamage += 30;
                damage -= 40;
            }
            
            if (masterStaffElement == "air")
            {
                srand(time(NULL));
                int myAgility = rand() % 4 + 1;
                
                if (myAgility == 1)
                {
                    damage = 0;
                    
                    if (enemyType < 50)
                    {
                        cout << "The " << enemy << " missed!" << endl;
                    }
                    
                    if (enemyType >= 50)
                    {
                        cout << enemy << " missed!" << endl;
                    }
                    cout << endl;
                }
            }
        }
    }
}

void classType()
{
    classChoose:
    cout << "What class will you be? Will you be a warrior, an archer, a druid, or a wizard?" << endl;
    convert();
    classGame = answer;
    
    if (quit == true)
    {
        return;
    }
    
    if (classGame != "archer" && classGame != "druid" && classGame != "wizard" && classGame != "warrior")
    {
        cout << "That is not a valid class. Please try again." << endl;
        goto classChoose;
    }
    
    if (classGame == "archer")
    {
        shortBow = true;
        cout << "You have chosen to be an archer! You have a weak bow but excellent aim!" << endl;
    }
    
    else if (classGame == "druid")
    {
        woodenStaff = true;
        cout << "You have chosen to be a druid! You have the powers of healing with your staff!" << endl;
    }
    
    else if (classGame == "wizard")
    {
        woodenWand = true;
        cout << "You have chosen to be a wizard! You have gained magical powers, which you can use with your wand!" << endl;
    }
    
    else if (classGame == "warrior")
    {
        shortSword = true;
        cout << "You have chosen to be a warrior! You have incredible strength, although a weak sword!" << endl;
    }
    
    else 
    {
        cout << "That is not a valid class. Please try again." << endl;
        goto classChoose;
    }
}

void upgrade()
{ 
    if (classGame == "warrior")
    {
        if (answer == "short sword")
        {
            if (shortSwordForge == 1)
            {
                myDamage -= 20;
            }
            
            else if (shortSwordForge == 2)
            {
                myDamage -= 10;
            }
            
            else if (shortSwordForge == 4)
            {
                myDamage += 15;
            }
            
            else if (shortSwordForge == 5)
            {
                myDamage += 25;
            }
        }
        
        if (answer == "long sword")
        {
            if (longSwordForge == 1)
            {
                myDamage -= 40;
            }
            
            else if (longSwordForge == 2)
            {
                myDamage -= 20;
            }
            
            else if (longSwordForge == 4)
            {
                myDamage += 40;
            }
            
            else if (longSwordForge == 5)
            {
                myDamage += 60;
            }
        }
        
        if (answer == "broadsword")
        {
            if (broadswordForge == 1)
            {
                myDamage -= 50;
            }
            
            else if (broadswordForge == 2)
            {
                myDamage -= 30;
            }
            
            else if (broadswordForge == 4)
            {
                myDamage += 50;
            }
            
            else if (broadswordForge == 5)
            {
                myDamage += 90;
            }
        }
        
        if (answer == "dual sword")
        {
            if (dualSwordForge == 1)
            {
                myDamage -= 100;
            }
            
            else if (dualSwordForge == 2)
            {
                myDamage -= 75;
            }
            
            else if (dualSwordForge == 4)
            {
                myDamage += 80;
            }
            
            else if (dualSwordForge == 5)
            {
                myDamage += 150;
            }
        }
    }
    
    if (classGame == "archer")
    {
        if (answer == "short bow")
        {
            if (shortBowForge == 1)
            {
                myDamage -= 15;
            }
            
            else if (shortBowForge == 2)
            {
                myDamage -= 5;
            }
            
            else if (shortBowForge == 4)
            {
                myDamage += 10;
            }
            
            else if (shortBowForge == 5)
            {
                myDamage += 20;
            }
        }
        
        if (answer == "recurve bow")
        {
            if (recurveBowForge == 1)
            {
                myDamage -= 20;
            }
            
            else if (recurveBowForge == 2)
            {
                myDamage -=10;
            }
            
            else if (recurveBowForge == 4)
            {
                myDamage += 20;
            }
            
            else if (recurveBowForge == 5)
            {
                myDamage += 35;
            }
        }
        
        if (answer == "longbow")
        {
            if (longBowForge == 1)
            {
                myDamage -= 50;
            }
            
            else if (longBowForge == 2)
            {
                myDamage -= 30;
            }
            
            else if (longBowForge == 4)
            {
                myDamage += 60;
            }
            
            else if (longBowForge == 5)
            {
                myDamage += 70;
            }
        }
        
        if (answer == "kings bow")
        {
            if (kingsBowForge == 1)
            {
                myDamage -= 80;
            }
            
            else if (kingsBowForge == 2)
            {
                myDamage -= 60;
            }
            
            else if (kingsBowForge == 4)
            {
                myDamage += 70;
            }
            
            else if (kingsBowForge == 5)
            {
                myDamage += 100;
            }
        }
    }
    
    if (classGame == "wizard")
    {
        if (answer == "wooden wand")
        {
            if (woodenWandForge == 1)
            {
                effectiveness -= 1;
            }
            
            else if (woodenWandForge == 2)
            {
                effectiveness -= 1;
            }
            
            else if (woodenWandForge == 4)
            {
                effectiveness += 1;
            }
            
            else if (woodenWandForge == 5)
            {
                effectiveness += 2;
            }
        }
        
        if (answer == "ivory wand")
        {
            if (ivoryWandForge == 1)
            {
                effectiveness -= 2;
            }
            
            else if (ivoryWandForge == 2)
            {
                effectiveness -= 1;
            }
            
            else if (ivoryWandForge == 4)
            {
                effectiveness += 2;
            }
            
            else if (ivoryWandForge == 5)
            {
                effectiveness += 3;
            }
        }
        
        if (answer == "plated wand")
        {
            if (platedWandForge == 1)
            {
                effectiveness -= 3;
            }
            
            else if (platedWandForge == 2)
            {
                effectiveness -= 2;
            }
            
            else if (platedWandForge == 4)
            {
                effectiveness += 3;
            }
            
            else if (platedWandForge == 5)
            {
                effectiveness += 4;
            }
        }
        
        if (answer == "legendary wand")
        {
            if (legendaryWandForge == 1)
            {
                effectiveness -= 6;
            }
            
            else if (legendaryWandForge == 2)
            {
                effectiveness -= 4;
            }
            
            else if (legendaryWandForge == 4)
            {
                effectiveness += 5;
            }
            
            else if (legendaryWandForge == 5)
            {
                effectiveness += 7;
            }
        }
    }
    
    if (classGame == "druid")
    {
        if (answer == "wooden staff")
        {
            if (woodenStaffForge == 1)
            {
                myDamage -= 5;
            }
            
            else if (woodenStaffForge == 2)
            {
                myDamage -= 3;
            }
            
            else if (woodenStaffForge == 4)
            {
                myDamage += 5;
            }
            
            else if (woodenStaffForge == 5)
            {
                myDamage += 10;
            }
        }
        
        if (answer == "imbued staff")
        {
            if (imbuedStaffForge == 1)
            {
                myDamage -= 10;
            }
            
            else if (imbuedStaffForge == 2)
            {
                myDamage -= 7;
            }
            
            else if (imbuedStaffForge == 4)
            {
                myDamage += 10;
            }
            
            else if (imbuedStaffForge == 5)
            {
                myDamage += 15;
            }
        }
        
        if (answer == "nature staff")
        {
            if (natureStaffUpgrade == 1)
            {
                myDamage -= 25;
            }
            
            else if (natureStaffUpgrade == 2)
            {
                myDamage -= 15;
            }
            
            else if (natureStaffUpgrade == 4)
            {
                myDamage += 20;
            }
            
            else if (natureStaffUpgrade == 5)
            {
                myDamage += 30;
            }
        }
        
        if (answer == "master staff")
        {
            if (masterStaffForge == 1)
            {
                myDamage -= 50;
            }
            
            else if (masterStaffForge == 2)
            {
                myDamage -= 30;
            }
            
            else if (masterStaffForge == 4)
            {
                myDamage += 40;
            }
            
            else if (masterStaffForge == 5)
            {
                myDamage += 70;
            }
        }
    }
}

void swingSword()
{
    if (classGame == "warrior")
    {
        if (answer == "short sword" && shortSword == true)
        {
            srand(time(NULL));                                          
            myDamage = rand() % 30 + 15;
        }
        
        if (answer == "long sword" && longSword == true)
        {
            srand(time(NULL));                                          
            myDamage = rand() % 60 + 35;
        }
        
        if (answer == "broadsword" && broadsword == true)
        {
            srand(time(NULL));                                          
            myDamage = rand() % 120 + 80;
        }
        
        if (answer == "dual sword" && dualSword == true)
        {
            srand(time(NULL));                                          
            myDamage = rand() % 250 + 150;
            damage += reducedDamage;
        }
        myDamage += warriorLevel * 2;
        upgrade();
        myElement();
        enemyLife -= myDamage;
        
        if (enemyType < 50)
        {
            cout << "The " << enemy << " is now at " << enemyLife << "." << endl;
        }
            
        if (enemyType >= 50)
        {
            cout << enemy << " is now at " << enemyLife << "." << endl;
        }
    }
}

void shootBow()
{
    if (classGame == "archer")
    {
        if (answer == "short bow" && shortBow == true)
        {
            if (arrow > 0)
            {
                arrow -= 1;
                srand(time(NULL));                                          
                myDamage = rand() % 20 + 10;
                upgrade();
                myDamage += archerLevel;
                enemyLife -= myDamage;
                cout << endl;
                cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
                cout << "You have " << arrow << " arrows left." << endl;
                cout << endl;
            }
            
            else if (arrow <= 0)
            {
                cout << endl;
                cout << "You are out of arrows." << endl;
                cout << endl;
            }
        }
        
        if (answer == "recurve bow" && recurveBow == true)
        {
            if (arrow > 0)
            {
                arrow -= 1;
                srand(time(NULL));                                          
                myDamage = rand() % 40 + 20;
                upgrade();
                myDamage += archerLevel;
                enemyLife -= myDamage;
                cout << endl;
                cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
                cout << "You have " << arrow << " arrows left." << endl;
                cout << endl;
            }
            
            else if (arrow <= 0)
            {
                cout << endl;
                cout << "You are out of arrows." << endl;
                cout << endl;
            }
        }
        
        if (answer == "longbow" && longbow == true)
        {
            if (arrow > 0)
            {
                arrow -= 1;
                srand(time(NULL));                                          
                myDamage = rand() % 80 + 40;
                upgrade();
                myDamage += archerLevel;
                enemyLife -= myDamage;
                cout << endl;
                cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
                cout << "You have " << arrow << " arrows left." << endl;
                cout << endl;
            }
            
            else if (arrow <= 0)
            {
                cout << endl;
                cout << "You are out of arrows." << endl;
                cout << endl;
            }
        }
        
        if (answer == "kings bow" && shortBow == true)
        {
            if (arrow > 0)
            {
                srand(time(NULL));                                          
                myDamage = rand() % 150 + 100;
                srand(time(NULL));
                int chance = rand() % 50 + 1;
                
                if (chance == 50)
                {
                    srand(time(NULL));
                    int arrows = rand() % 3 + 1;
                    myDamage *= arrows;
                    arrow -= arrows;
                }
                
                else if (chance != 50)
                {
                    arrow -= 1;
                }
                upgrade();
                myDamage += archerLevel;
                enemyLife -= myDamage;
                cout << endl;
                cout << "The " << enemy << "s health is now at " << enemyLife << "." << endl;
                cout << "You have " << arrow << " arrows left." << endl;
                cout << endl;
            }
            
            else if (arrow <= 0)
            {
                cout << endl;
                cout << "You are out of arrows." << endl;
                cout << endl;
            }
        }
    }
}

void castWand()
{
    if (classGame == "wizard")
    {
        if (answer == "wooden wand" && woodenWand == true)
        {
            srand(time(NULL));
            effectiveness = rand() % 4 + 2;
        }
        
        if (answer == "ivory wand" && ivoryWand == true)
        {
            srand(time(NULL));
            effectiveness = rand() % 6 + 4;
        }
        
        if (answer == "plated wand" && platedWand == true)
        {
            srand(time(NULL));
            effectiveness = rand() % 10 + 6;
        }
        
        if (answer == "legendary wand" && legendaryWand == true)
        {
            srand(time(NULL));
            effectiveness = rand() % 20 + 15;
        }
        effectiveness += wizardLevel / 10;
        cout << "What spell will you use?" << endl;
        
        if (spellOfDamage == true)
        {
            cout << "Spell of Damage" << endl;
        }
        
        if (spellOfHealing == true)
        {
            cout << "Spell of Health" << endl;
        }
        
        if (spellOfDefense == true)
        {
            cout << "Spell of Defense" << endl;
        }
        
        if (spellOfDexterity == true)
        {
            cout << "Spell of Dexterity" << endl;
        }
        
        if (spellOfExplosiveness == true)
        {
            cout << "Spell of Explosiveness" << endl;
        }
        convert();
        
        if (answer == "spell of damage" && spellOfDamage == true)
        {
            srand(time(NULL));
            int baseSpell = rand() % 5 + 1;
            upgrade();
            myDamage = baseSpell * effectiveness;
            enemyLife -= myDamage;
            
            if (enemyType < 50)
            {
                cout << "The " << enemy << " is now at " << enemyLife << "." << endl;
            }
            
            if (enemyType >= 50)
            {
                cout << enemy << " is now at " << enemyLife << "." << endl;
            }
            cout << endl;
        }
    }
}

void useStaff()
{
    if (classGame == "druid")
    {
        if (answer == "wooden staff" && woodenStaff == true)
        {
            srand(time(NULL));
            myDamage = rand () % 15 + 5;
            heal = myDamage / 2;
            myLife += heal;
            enemyLife -= myDamage;
        }
        
        if (answer == "imbued staff" && imbuedStaff == true)
        {
            srand(time(NULL));
            myDamage = rand () % 40 + 15;
            heal = myDamage / 2;
            myLife += heal;
            enemyLife -= myDamage;
        }
        
        if (answer == "nature staff" && natureStaff == true)
        {
            srand(time(NULL));
            myDamage = rand () % 80 + 40;
            heal = myDamage / 2;
            myLife += heal;
            enemyLife -= myDamage;
        }
        
        if (answer == "master staff" && masterStaff == true)
        {
            srand(time(NULL));
            myDamage = rand () % 150 + 100;
            heal = myDamage;
            myLife += heal;
            enemyLife -= myDamage;
        }
        myLife += druidLevel / 2;
        if (enemyType < 50)
        {
            cout << "The " << enemy << " is now at " << enemyLife << "." << endl;
        }
            
        if (enemyType >= 50)
        {
            cout << enemy << " is now at " << enemyLife << "." << endl;
        }
        cout << "You gained " << heal << " health, so you are now at " << myLife << "." << endl;
        cout << endl;
    } 
}

void armor()
{
    if (classGame == "warrior")
    {
        // Here I apply the armor and add to the reduced damage, which is added to the Dual Sword's damage
        if (helm == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (chainmail == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (chestplate == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (greaves == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (gauntlets == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (spaulders == true)
        {
            damage -= 10;
            reducedDamage += 10;
        }
        
        if (shield == true)
        {
            damage -= 50;
            reducedDamage += 50;
        }
    }
}

void enemyAttack()
{
	srand(time(NULL));                                          
    int damage = rand() % 8 + 1;
    damage *= enemyType / 2;
    armor();
    myElement();
	cout << "It is now the " << enemy << "s turn to attack." << endl;
	convert();
	myLife -= damage;
	cout << "Your life has been reduced to " << myLife << "." << endl;
}

void bossAttack()
{
    if (enemy == "Gakudori")
    {
        srand(time(NULL));                                          
        damage = rand() % 100 + 40;
    }
    
    if (enemy == "Dreallade")
    {
        srand(time(NULL));                                          
        damage = rand() % 110 + 50;
    }
    
    if (enemy == "Kosami")
    {
        srand(time(NULL));                                          
        damage = rand() % 120 + 60;
    }
    
    if (enemy == "Tinkimi")
    {
        srand(time(NULL));                                          
        damage = rand() % 130 + 70;
    }
    
    if (enemy == "Lloquear")
    {
        srand(time(NULL));                                          
        damage = rand() % 140 + 80;
    }
    
    if (enemy == "Waonow")
    {
        srand(time(NULL));                                          
        damage = rand() % 150 + 90;
    }
    
    if (enemy == "Sihodima")
    {
        srand(time(NULL));                                          
        damage = rand() % 160 + 100;
    }
    
    if (enemy == "Vororokth")
    {
        srand(time(NULL));                                          
        damage = rand() % 200 + 100;
    }
    cout << "It is now " << enemy << "s turn to attack." << endl;
    convert();
	armor();
	myElement();
	myLife -= damage;
	cout << "Your life has been reduced to " << myLife << "." << endl;
	cout << endl;
}
    
void chooseWeapon()
{
    choose:
    cout << endl;
    cout << "Your available weapons are:" << endl;
    cout << endl;
    
    if (classGame == "warrior")
    {
        if (shortSword == true)
        {
            cout << "Short Sword" << endl;
        }
        
        if (longSword == true)
        {
            cout << "Long Sword" << endl;
        }
        
        if (broadsword == true)
        {
            cout << "Broadsword" << endl;
        }
        
        if (dualSword == true)
        {
            cout << "Dual Sword" << endl;
        }
    }
    
    if (classGame == "archer")
    {
        if (shortBow == true)
        {
            cout << "Short Bow" << endl;
        }
        
        if (recurveBow == true)
        {
            cout << "Recurve Bow" << endl;
        }
        
        if (longbow == true)
        {
            cout << "Longbow" << endl;
        }
        
        if (kingsBow == true)
        {
            cout << "Kings Bow" << endl;
        }
    }
    
    if (classGame == "wizard")
    {
        if (woodenWand == true)
        {
            cout << "Wooden Wand" << endl;
        }
        
        if (ivoryWand == true)
        {
            cout << "Ivory Wand" << endl;
        }
        
        if (platedWand == true)
        {
            cout << "Plated Wand" << endl;
        }
        
        if (legendaryWand == true)
        {
            cout << "Legendary Wand" << endl;
        }
    }
    
    if (classGame == "druid")
    {
        if (woodenStaff == true)
        {
            cout << "Wooden Staff" << endl;
        }
        
        if (imbuedStaff == true)
        {
            cout << "Imbued Staff" << endl;
        }
        
        if (natureStaff == true)
        {
            cout << "Nature Staff" << endl;
        }
        
        if (masterStaff == true)
        {
            cout << "Master Staff" << endl;
        }
    }
    
    cout << endl;
    cout << "What will you use?" << endl;
    cout << endl;
    convert();
    
    if (classGame == "warrior")
    {
        if (answer != "short sword" && answer != "long sword" && answer != "broadsword" && answer != "dual sword")
        {
            cout << "That is not a valid weapon. Please try again." << endl;
            cout << endl;
            goto choose;
        }
        
        if ((answer == "short sword" && shortSword == true) || (answer == "long sword" && longSword == true) || (answer == "broadsword" && broadsword == true) || (answer == "dual sword" && dualSword == true))
        {
            swingSword();
        }
    }

    if (classGame == "archer")
    {
        if (answer != "short bow" && answer != "recurve bow" && answer != "longbow" && answer != "kings bow")
        {
            cout << "That is not a valid weapon, or you have not bought it yet." << endl;
            cout << endl;
            goto choose;
        }
        
        if ((answer == "short bow" && shortBow == true) || (answer == "recurve bow" && recurveBow == true) || (answer == "longbow" && longbow == true) || (answer == "kings bow" && kingsBow == true))
        {
            shootBow();
        }
    }
    
    if (classGame == "wizard")
    {
        if (answer != "wooden wand" && answer != "ivory wand" && answer != "plated wand" && answer != "legendary wand")
        {
            cout << "That is not a valid weapon, or you have not bought it yet." << endl;
            cout << endl;
            goto choose;
        }
        
        if ((answer == "wooden wand" && woodenWand == true) || (answer == "ivory wand" && ivoryWand == true) || (answer == "plated wand" && platedWand == true) || (answer == "legendary wand" && legendaryWand == true))
        {
            castWand();
        }
    }
    
    if (classGame == "druid")
    {
        if (answer != "wooden staff" && answer != "imbued staff" && answer != "nature staff" && answer != "master staff")
        {
            cout << "That is not a valid weapon, or you have not bought it yet." << endl;
            cout << endl;
            goto choose;
        }
        
        if ((answer == "wooden staff" && woodenStaff == true) || (answer == "imbued staff" && imbuedStaff == true) || (answer == "nature staff" && natureStaff == true) || (answer == "master staff" && masterStaff == true))
        {
            useStaff();
        }
    }
}   

void experience()
{
    srand(time(NULL));
    int experience = rand() % 20 + 5;
    
    if (classGame == "warrior")
    {
        warriorNew = experience * enemyType;
    }
    
    if (classGame == "archer")
    {
        archerNew = experience * enemyType;
    }
    
    if (classGame == "wizard")
    {
        wizardNew = experience * enemyType;
    }
    
    if (classGame == "druid")
    {
        druidNew = experience * enemyType;
    }
}

void levelUp()
{
    if (classGame == "warrior")
    {
        cout << endl;
        cout << "You got " << warriorNew << " experience from the fight." << endl;
        warriorExperience += warriorNew;
        warriorNew = 0;
        
        if (warriorExperience >= warriorRequired)
        {
            warriorExperience -= warriorRequired;
            warriorLevel += 1;
            cout << "You have leveled up! You are now at level " << warriorLevel << "!" << endl;
            srand(time(NULL));                                          
            int newRequired = rand() % 250 + 100;
            warriorRequired += newRequired;
        }
        
        else if (warriorExperience < warriorRequired)
        {
            cout << "You are " << (warriorRequired - warriorExperience) << " exp away from level " << (warriorLevel + 1) << "." << endl;
        }
    }
    
    if (classGame == "archer")
    {
        cout << endl;
        cout << "You got " << archerNew << " experience from the fight." << endl;
        archerExperience += archerNew;
        archerNew = 0;
        
        if (archerExperience >= archerRequired)
        {
            archerExperience -= archerRequired;
            archerLevel += 1;
            cout << "You have leveled up! You are now at level " << archerLevel << "!" << endl;
            srand(time(NULL));                                          
            int newRequired = rand() % 250 + 100;
            archerRequired += newRequired;
        }
        
        else if (archerExperience < archerRequired)
        {
            cout << "You are " << (archerRequired - archerExperience) << " exp away from level " << (archerLevel + 1) << "." << endl;
        }
    }
    
    if (classGame == "wizard")
    {
        cout << endl;
        cout << "You got " << wizardNew << " experience from the fight." << endl;
        wizardExperience += wizardNew;
        wizardNew = 0;
        
        if (wizardExperience >= wizardRequired)
        {
            wizardExperience -= wizardRequired;
            wizardLevel += 1;
            cout << "You have leveled up! You are now at level " << wizardLevel << "!" << endl;
            srand(time(NULL));                                          
            int newRequired = rand() % 250 + 100;
            wizardRequired += newRequired;
        }
        
        else if (wizardExperience < wizardRequired)
        {
            cout << "You are " << (wizardRequired - wizardExperience) << " exp away from level " << (wizardLevel + 1) << "." << endl;
        }
    }
    
    if (classGame == "druid")
    {
        cout << endl;
        cout << "You got " << druidNew << " experience from the fight." << endl;
        druidExperience += druidNew;
        druidNew = 0;
        
        if (druidExperience >= druidRequired)
        {
            druidExperience -= druidRequired;
            druidLevel += 1;
            cout << "You have leveled up! You are now at level " << druidLevel << "!" << endl;
            srand(time(NULL));                                          
            int newRequired = rand() % 250 + 100;
            druidRequired += newRequired;
        }
        
        else if (druidExperience < druidRequired)
        {
            cout << "You are " << (druidRequired - druidExperience) << " exp away from level " << (druidLevel + 1) << "." << endl;
        }
    }
}

void runAway()
{
    cout << endl;
    
    if (classGame != "archer")
    {
        enemyLife = -1289;
        food -= 10;
        cout << "You lost 10 food in the scuffle." << endl;
        cout << endl;
    }
    
    else if (classGame == "archer")
    {
        enemyLife = -1289;
        cout << "You have successfully gotten away from the enemy." << endl;
        cout << endl;
    }
}

void eat()
{
    cout << endl;
    food -= 20;
    myLife += 50;
    cout << "Your health is now at " << myLife << " health, and you have " << food << " food left." << endl;
    cout << endl;
}

void dungeonBoss()
{
    cout << endl;
    cout << "You have reached the end of the hall. You see a room, the door slightly ajar, with lights flickering." << endl;
    cout << "When you are ready, press enter to begin fighting the boss." << endl;
    convert();
    
    if (answer != " ")
    {
        if (currentLocation == "Ightormeld" && questing == true)
        {
            enemyType = 50;
            enemyLife = 1000;
            enemy = "Gakudoki";
            cout << "You have engaged in battle with the dungeon boss, Gakadoki, the Collector of Dreams." << endl;
        }
        
        else if (currentLocation == "Goroth" && questing == true)
        {
            enemyType = 51;
            enemyLife = 1500;
            enemy = "Dreallade";
            cout << "You have engaged in battle with the dungeon boss, Dreallade, the Reaper of Souls." << endl;
        }
        
        else if (currentLocation == "Mesedt" && questing == true)
        {
            enemyType = 52;
            enemyLife = 2000;
            enemy = "Kosami";
            cout << "You have engaged in battle with the dungeon boss, Kosami, the Bane of Life." << endl;
        }
        
        else if (currentLocation == "Umkelu" && questing == true)
        {
            enemyType = 53;
            enemyLife = 2500;
            enemy = "Tinkimi";
            cout << "You have engaged in battle with the dungeon boss, Tinkimi, the Thief of Courage." << endl;
        }
        
        else if (currentLocation == "Alether" && questing == true)
        {
            enemyType = 54;
            enemyLife = 3000;
            enemy = "Lloquear";
            cout << "You have engaged in battle with the dungeon boss, Lloquear, Courier of Death." << endl;
        }
        
        else if (currentLocation == "Mosmkin" && questing == true)
        {
            enemyType = 55;
            enemyLife = 3500;
            enemy = "Waonow";
            cout << "You have engaged in battle with the dungeon boss, Waonow, the Gladiator of Destruction." << endl;
        }
        
        else if (currentLocation == "Tinimet" && questing == true)
        {
            enemyType = 56;
            enemyLife = 4000;
            enemy = "Sihodima";
            cout << "You have engaged in battle with the dungeon boss, Sihodima, the Seraph of Shadows." << endl;
        }
        
        else if (currentLocation == "Lair" && questing == true)
        {
            enemyType = 57;
            enemyLife = 5000;
            enemy = "Vororokth";
            cout << "You have engaged in battle with the dungeon boss, Vororokth, the Dragon of Demise." << endl;
        }
    } 
}

void visitShop()
{
    main_shop:
    cout << endl;
    
    if (classGame == "warrior")
    {
        cout << "Armor Shop" << endl;
    }
    
    if (classGame == "archer")
    {
        cout << "Arrow Shop" << endl;
    }
    
    if (classGame == "wizard")
    {
        cout << "Spell Shop" << endl;
    }
    
    cout << "Weapon Shop" << endl;
    cout << "Upgrade Shop" << endl;
    cout << "Food Shop" << endl;
    cout << "Town (you can go back to town at any shop)" << endl;
    convert();
    
    if (answer != "arrow shop" && answer != "weapon shop" && answer != "upgrade shop" && answer != "food shop" && answer != "town" && answer != "spell shop" && answer != "armor shop")
    {
        cout << "That is an invalid command. Please press one of the ones specified." << endl;
        goto main_shop;
    }
    
    if (answer == "town")
    {
        return;
    }
        
    if (answer == "food shop")
    {
        food_shop:
        cout << endl;
        cout << "Food is 1 for 2 gold coins." << endl;
        cout << "How much would you like to buy?" << endl;
        cin >> quantity;
            
        if (quantity < 100 && quantity > 0 && money >= 2 * quantity)
        {
            food += quantity;
            money -= 2 * quantity;
            cout << "You now have " << food << " food and " << money << " gold coins." << endl;
            cout << "Would you like to buy more?" << endl;
            convert();
            
            if (answer == "yes")
            {
                goto food_shop;
            }
            
            else
            {
                goto main_shop;
            }
        }
            
        else if (money < quantity * 2)
        {
            cout << "You are out of money." << endl;
            goto main_shop;
        }
       
        else
        {
            cout << "That is an invalid quantity. Please try again." << endl;
            goto food_shop;
        }
    }
    
    if (answer == "upgrade shop")
    {
        upgrade_shop:
        cout << endl;
        cout << "What upgrade would you like to buy?" << endl;
        
        if (classGame == "warrior")
        {
            if (shortSword == true && shortSwordUpgrade == false)
            {
            	cout << "Short Sword Upgrade for 3000 gold coins." << endl;
            }
            
            if (longSword == true && longSwordUpgrade == false)
            {
                cout << "Long Sword Upgrade for 5000 gold coins." << endl;
            }
            
            if (broadsword == true && broadswordUpgrade == false)
            {
                cout << "Broadsword Upgrade for 8000 gold coins." << endl;
            }
            
            if (dualSword == true && dualSwordUpgrade == false)
            {
                cout << "Dual Sword Upgrade for 15000 gold coins." << endl;
            }
        }
            
        if (classGame == "archer")
        {
            if (shortBow == true && shortBowUpgrade == false)
            {
                cout << "Short Bow Upgrade for 3000 gold coins." << endl;
            }
            
            if (recurveBow == true && recurveBowUpgrade == false)
            {
                cout << "Recurve Bow Upgrade for 5000 gold coins." << endl;
            }
            
            if (longbow == true && longbowUpgrade == false)
            {
                cout << "Longbow Upgrade for 8000 gold coins." << endl;
            }
            
            if (kingsBow == true && kingsBowUpgrade == false)
            {
                cout << "Kings Bow Upgrade for 15000 gold coins." << endl;
            }
        }
        
        if (classGame == "wizard")
        {
            if (woodenWand == true && woodenWandUpgrade == false)
            {
            	cout << "Wooden Wand Upgrade for 3000 gold coins." << endl;
            }
            
            if (ivoryWand == true && ivoryWandUpgrade == false)
            {
                cout << "Long Sword Upgrade for 5000 gold coins." << endl;
            }
            
            if (platedWand == true && platedWandUpgrade == false)
            {
                cout << "Plated Wand Upgrade for 8000 gold coins." << endl;
            }
            
            if (legendaryWand == true && legendaryWandUpgrade == false)
            {
                cout << "Legendary Wand Upgrade for 15000 gold coins." << endl;
            }
        }
        
        if (classGame == "druid")
        {
            if (woodenStaff == true && woodenStaffUpgrade == false)
            {
            	cout << "Wooden Staff Upgrade for 3000 gold coins." << endl;
            }
            
            if (imbuedStaff == true && imbuedStaffUpgrade == false)
            {
                cout << "Imbued Staff Upgrade for 5000 gold coins." << endl;
            }
            
            if (natureStaff == true && natureStaffUpgrade == false)
            {
                cout << "Nature Staff Upgrade for 8000 gold coins." << endl;
            }
            
            if (masterStaff == true && masterStaffUpgrade == false)
            {
                cout << "Master Staff Upgrade for 15000 gold coins." << endl;
            }
        }
        
        cout << "What will you buy?" << endl;
        convert();
        
        if (answer == "town")
        {
            return;
        }
        
        if (classGame == "warrior")
        {
            if (answer == "short sword")
            {
                if (shortSwordUpgrade == false && money >= 3000 && shortSword == true)
                {
                    shortSwordUpgrade = true;
                    money -= 3000;
                    cout << "You have bought the short sword upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (shortSwordUpgrade == true)
                {
                    cout << "You already have the short sword upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (shortSword == false)
                {
                    cout << "You do not have the short sword." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 3000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "long sword")
            {
                if (longSwordUpgrade == false && money >= 5000 && longSword == true)
                {
                    longSwordUpgrade = true;
                    money -= 5000;
                    cout << "You have bought the long sword upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (longSwordUpgrade == true)
                {
                    cout << "You already have the long sword upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (longSword == false)
                {
                    cout << "You do not have the long sword." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 5000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
        
            if (answer == "broadsword")
            {
                if (broadswordUpgrade == false && money >= 8000 && broadsword == true)
                {
            	    broadswordUpgrade = true;
            	    money -= 8000;
            	    cout << "You have bought the broadsword upgrade! You can now reforge it, if you have the forging trinket!" << endl;
            	    goto upgrade_shop;
                }
                
                else if (broadswordUpgrade == true)
                {
                    cout << "You already have the broadsword upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (broadsword == false)
                {
                    cout << "You do not have the broadsword." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 8000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "dual sword")
            {
                if (dualSwordUpgrade == false && money >= 15000 && dualSword == true)
                {
                    dualSwordUpgrade = true;
                    money -= 15000;
                    cout << "You have bought the dual sword upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (dualSwordUpgrade == true)
                {
                    cout << "You already have the dual sword upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (dualSword == false)
                {
                    cout << "You do not have the dual sword." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 15000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            else 
            {
                cout << "That is an invalid weapon." << endl;
                goto upgrade_shop;
            }
        }
        
        if (classGame == "archer")
        {
            if (answer == "short bow")
            {
                if (shortBowUpgrade == false && money >= 3000 && shortBow == true)
                {
                    shortBowUpgrade = true;
                    money -= 3000;
                    cout << "You have bought the short bow upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (shortBowUpgrade == true)
                {
                    cout << "You already have the short bow upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (shortBow == false)
                {
                    cout << "You do not have the short bow." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 3000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "recurve bow")
            {
                if (recurveBowUpgrade == false && money >= 5000 && recurveBow == true)
                {
                    recurveBowUpgrade = true;
                    money -= 5000;
                    cout << "You have bought the recurve bow upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (recurveBowUpgrade == true)
                {
                    cout << "You already have the recurve bow upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (recurveBow == false)
                {
                    cout << "You do not have the recurve bow." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 5000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "longbow")
            {
                if (longbowUpgrade == false && money >= 8000 && longbow == true)
                {
            	    longbowUpgrade = true;
            	    money -= 8000;
            	    cout << "You have bought the longbow upgrade! You can now reforge it, if you have the forging trinket!" << endl;
            	    goto upgrade_shop;
                }
                
                else if (longbowUpgrade == true)
                {
                    cout << "You already have the longbow upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (longbow == false)
                {
                    cout << "You do not have the longbow." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 8000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "kings bow")
            {
                if (kingsBowUpgrade == false && money >= 15000 && kingsBow == true)
                {
                    kingsBowUpgrade = true;
                    money -= 15000;
                    cout << "You have bought the kings bow upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (kingsBowUpgrade == true)
                {
                    cout << "You already have the kings bow upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (kingsBow == false)
                {
                    cout << "You do not have the kings bow." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 15000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            else 
            {
                cout << "That is an invalid weapon." << endl;
                goto upgrade_shop;
            }
        }
        
        if (classGame == "wizard")
        {
            if (answer == "wooden wand")
            {
                if (woodenWandUpgrade == false && money >= 3000 && woodenWand == true)
                {
                    woodenWandUpgrade = true;
                    money -= 3000;
                    cout << "You have bought the wooden wand upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (woodenWandUpgrade == true)
                {
                    cout << "You already have the wooden wand upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (woodenWand == false)
                {
                    cout << "You do not have the wooden wand." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 3000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "ivory wand")
            {
                if (ivoryWandUpgrade == false && money >= 5000 && ivoryWand == true)
                {
                    ivoryWandUpgrade = true;
                    money -= 5000;
                    cout << "You have bought the ivory wand upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (ivoryWandUpgrade == true)
                {
                    cout << "You already have the ivory wand upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (ivoryWand == false)
                {
                    cout << "You do not have the ivory wand." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 5000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "plated wand")
            {
                if (platedWandUpgrade == false && money >= 8000 && platedWand == true)
                {
            	    platedWandUpgrade = true;
            	    money -= 8000;
            	    cout << "You have bought the plated wand upgrade! You can now reforge it, if you have the forging trinket!" << endl;
            	    goto upgrade_shop;
                }
                
                else if (platedWandUpgrade == true)
                {
                    cout << "You already have the plated wand upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (platedWand == false)
                {
                    cout << "You do not have the plated wand." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 8000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "legendary wand")
            {
                if (legendaryWandUpgrade == false && money >= 15000 && legendaryWand == true)
                {
                    legendaryWandUpgrade = true;
                    money -= 15000;
                    cout << "You have bought the legendary wand upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (legendaryWandUpgrade == true)
                {
                    cout << "You already have the legendary wand upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (legendaryWand == false)
                {
                    cout << "You do not have the legendary wand." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 15000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            else 
            {
                cout << "That is an invalid weapon." << endl;
                goto upgrade_shop;
            }
        }
        
        if (classGame == "druid")
        {
            if (answer == "wooden staff")
            {
                if (woodenStaffUpgrade == false && money >= 3000 && woodenStaff == true)
                {
                    woodenStaffUpgrade = true;
                    money -= 3000;
                    cout << "You have bought the wooden staff upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (woodenStaffUpgrade == true)
                {
                    cout << "You already have the wooden staff upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (woodenStaff == false)
                {
                    cout << "You do not have the wooden staff." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 3000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "imbued staff")
            {
                if (imbuedStaffUpgrade == false && money >= 5000 && imbuedStaff == true)
                {
                    imbuedStaffUpgrade = true;
                    money -= 5000;
                    cout << "You have bought the imbued staff upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (imbuedStaffUpgrade == true)
                {
                    cout << "You already have the imbued staff upgrade." << endl;
                    goto upgrade_shop;
                }
                
                else if (imbuedStaff == false)
                {
                    cout << "You do not have the imbued staff." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 5000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
        
            if (answer == "nature staff")
            {
                if (natureStaffUpgrade == false && money >= 8000 && natureStaff == true)
                {
            	    natureStaffUpgrade = true;
            	    money -= 8000;
            	    cout << "You have bought the nature staff upgrade! You can now reforge it, if you have the forging trinket!" << endl;
            	    goto upgrade_shop;
                }
                
                else if (natureStaffUpgrade == true)
                {
                    cout << "You already have the nature staff upgrade." << endl;
                }
                
                else if (natureStaff == false)
                {
                    cout << "You do not have the nature staff." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 8000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            if (answer == "master staff")
            {
                if (masterStaffUpgrade == false && money >= 15000 && masterStaff == true)
                {
                    masterStaffUpgrade = true;
                    money -= 15000;
                    cout << "You have bought the master staff upgrade! You can now reforge it, if you have the forging trinket!" << endl;
                    goto upgrade_shop;
                }
                
                else if (masterStaffUpgrade == true)
                {
                    cout << "You already have the master staff upgrade." << endl;
                }
                
                else if (masterStaff == false)
                {
                    cout << "You do not have the master staff." << endl;
                    goto upgrade_shop;
                }
                
                else if (money <= 15000)
                {
                    cout << "You do not have enough money to buy this." << endl;
                    goto upgrade_shop;
                }
            }
            
            else 
            {
                cout << "That is an invalid weapon." << endl;
                goto upgrade_shop;
            }
        }
        
        else
        {
            cout << "That is an invalid weapon. Please try again." << endl;
            goto upgrade_shop;
        }
    }

    if (answer == "weapon shop")
    {
        weapons_shop:
        cout << endl;
        cout << "You can buy the following." << endl;
        
        if (classGame == "warrior")
        {
           if (longSword == false)
           {
               cout << "Long sword for 5000 gold coins." << endl;
           }
           
           if (broadsword == false)
           {
               cout << "Broadsword for 8000 gold coins." << endl;
           }
        }
        
        if (classGame == "archer")
        {
            if (recurveBow == false)
            {
                cout << "Recurve Bow for 5000 gold coins." << endl;
            }
            
            if (longbow == false)
            {
                cout << "Longbow for 8000 gold coins." << endl;
            }
        }
        
        if (classGame == "wizard")
        {
            if (ivoryWand == false)
            {
                cout << "Ivory Wand for 5000 gold coins." << endl;
            }
            
            if (platedWand == false)
            {
                cout << "Plated Wand for 8000 gold coins." << endl;
            }
        }
        
        if (classGame == "druid")
        {
            if (imbuedStaff == false)
            {
                cout << "Imbued Staff for 5000 gold coins." << endl;
            }
            
            if (natureStaff == false)
            {
                cout << "Nature Staff for 8000 gold coins." << endl;
            }
        }
        
        cout << "What will you buy?" << endl;
        convert();
        
        if (classGame == "warrior")
        {
            if (answer != "long sword" && answer != "broadsword" && answer != "town")
            {
                cout << "That is an invalid weapon." << endl;
                cout << endl;
                goto weapons_shop;
            }
            
            if (answer == "long sword" || answer == "broadsword")
            {
                if (answer == "long sword")
                {
                    if (money < 5000)
                    {
                        cout << "You do not have enough money to buy the long sword." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (longSword == true)
                    {
                        cout << "You have already bought the long sword." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (longSword == false && money >= 5000)
                    {
                        longSword = true;
                        money -= 5000;
                        cout << "You have bought the long sword!" << endl;
                    }
                }
                
                if (answer == "broadsword")
                {
                    if (money < 8000)
                    {
                        cout << "You do not have enough money to buy the broadsword." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (broadsword == true)
                    {
                        cout << "You have already bought the broadsword." << endl;
                        cout << endl;        
                    }
                    
                    if (broadsword == false && money >= 8000)
                    {
                        broadsword = true;
                        money -= 8000;
                        cout << "You have bought the broadsword!" << endl;
                    }
                }
                
                weapon:
                cout << "Would you like to purchase another weapon?" << endl;
                convert();
                 
                if (answer != "yes" && answer != "no")
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon;
                }
                  
                if (answer == "yes")
                {
                    goto weapons_shop;
                }
                        
                else if (answer == "no")
                {
                    goto main_shop;
                }
                        
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon;
                }
            }
            
            if (answer == "town")
            {
                return;
            }
        }
        
        if (classGame == "archer")
        {
            if (answer != "recurve bow" && answer != "longbow" && answer != "town")
            {
                cout << "That is an invalid weapon." << endl;
                goto weapons_shop;
            }
            
            if (answer == "recurve bow" || answer == "longbow")
            {
                if (answer == "recurve bow")
                {
                    if (recurveBow == true)
                    {
                        cout << "You already own the recurve bow." << endl;
                        goto weapons_shop;
                    }
                    
                    if (money < 5000)
                    {
                        cout << "You do not have enough money." << endl;
                        goto main_shop;
                    }
                    
                    if (recurveBow == false && money >= 5000)
                    {
                        recurveBow = true;
                        money -= 5000;
                        cout << "You have bought the recurve bow!" << endl;
                    }
                }
                
                if (answer == "longbow")
                {
                    if (money < 8000)
                    {
                        cout << "You do not have enough money to buy the longbow." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (longbow == true)
                    {
                        cout << "You already own the longbow." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (longbow == false && money >= 8000)
                    {
                        longbow = true;
                        money -= 8000;
                        cout << "You have bought the longbow!" << endl;
                        cout << endl;
                    }
                }
                
                weapon_2:
                cout << "Would you like to purchase another weapon?" << endl;
                convert();
                 
                if (answer != "yes" && answer != "no")
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_2;
                }
                  
                if (answer == "yes")
                {
                    goto weapons_shop;
                }
                        
                else if (answer == "no")
                {
                    goto main_shop;
                }
                        
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_2;
                }
            }
            
            if (answer == "town")
            {
                return;
            }
        }
        
        if (classGame == "wizard")
        {
            if (answer != "ivory wand" && answer != "plated wand" && answer != "town")
            {
                cout << "That is an invalid weapon." << endl;
                cout << endl;
                goto weapons_shop;
            }
            
            if (answer == "ivory wand" || answer == "plated wand")
            {
                if (answer == "ivory wand")
                {
                    if (ivoryWand == true)
                    {
                        cout << "You already own the ivory wand." << endl;
                        goto weapons_shop;
                    }
                    
                    if (money < 5000)
                    {
                        cout << "You do not have enough money." << endl;
                        goto weapons_shop;
                    }
                    
                    if (ivoryWand == false && money >= 5000)
                    {
                        ivoryWand= true;
                        money -= 5000;
                        cout << "You have bought the ivory wand!" << endl;
                    }
                }
                
                if (answer == "plated wand")
                {
                    if (money < 8000)
                    {
                        cout << "You do not have enough money to buy the plated wand." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (platedWand == true)
                    {
                        cout << "You already own the plated wand." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (platedWand == false && money >= 8000)
                    {
                        platedWand = true;
                        money -= 8000;
                        cout << "You have bought the plated wand!" << endl;
                        cout << endl;
                    }
                }
                
                weapon_3:
                cout << "Would you like to purchase another weapon?" << endl;
                convert();
                 
                if (answer != "yes" && answer != "no")
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_3;
                }
                  
                if (answer == "yes")
                {
                    goto weapons_shop;
                }
                        
                else if (answer == "no")
                {
                    goto main_shop;
                }
                        
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_3;
                }
            }
            
            if (answer == "town")
            {
                return;
            }
        }
        
        if (classGame == "druid")
        {
            if (answer != "imbued staff" && answer != "nature staff" && answer != "town")
            {
                cout << "That is an invalid weapon." << endl;
                cout << endl;
                goto weapons_shop;
            }
            
            if (answer == "imbued staff" || answer == "nature staff")
            {
                if (answer == "imbued staff")
                {
                    if (imbuedStaff == true)
                    {
                        cout << "You already own the imbued staff." << endl;
                        goto weapons_shop;
                    }
                    
                    if (money < 5000)
                    {
                        cout << "You do not have enough money." << endl;
                        goto weapons_shop;
                    }
                    
                    if (imbuedStaff == false && money >= 5000)
                    {
                        imbuedStaff = true;
                        money -= 5000;
                        cout << "You have bought the imbued staff" << endl;
                    }
                }
                
                if (answer == "nature staff")
                {
                    if (money < 8000)
                    {
                        cout << "You do not have enough money to buy the nature staff." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (natureStaff == true)
                    {
                        cout << "You already own the nature staff." << endl;
                        cout << endl;
                        goto weapons_shop;
                    }
                    
                    if (natureStaff == false && money >= 8000)
                    {
                        natureStaff = true;
                        money -= 8000;
                        cout << "You have bought the nature staff!" << endl;
                        cout << endl;
                    }
                }
                
                weapon_4:
                cout << "Would you like to purchase another weapon?" << endl;
                convert();
                 
                if (answer != "yes" && answer != "no")
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_4;
                }
                  
                if (answer == "yes")
                {
                    goto weapons_shop;
                }
                        
                else if (answer == "no")
                {
                    goto main_shop;
                }
                        
                else
                {
                    cout << "That is an invalid answer. Please try again." << endl;
                    goto weapon_4;
                }
            }
            
            if (answer == "town")
            {
                return;
            }
        }
    }
    
    if (classGame == "warrior")
    {
        if (answer == "armor shop")
        {
            armor_shop:
            cout << "You can buy the following:" << endl;
            cout << endl;
            
            if (helm == false)
            {
                cout << "Helm for 3000 gold coins" << endl;
            }
            
            if (chainmail == false)
            {
                cout << "Chainmail for 5000 gold coins" << endl;
            }
            
            if (chestplate == false)
            {
                cout << "Chestplate for 5000 gold coins" << endl;
            }
            
            if (gauntlets == false)
            {
                cout << "Gauntlets for 3000 gold coins" << endl;
            }
            
            if (greaves == false)
            {
                cout << "Greaves for 3000 gold coins" << endl;
            }
            
            if (spaulders == false)
            {
                cout << "Spaulders for 3000 gold coins" << endl;
            }
            
            if (shield == false)
            {
                cout << "Shield for 15000 gold coins" << endl;
            }
            cout << endl;
            cout << "What will you buy?" << endl;
            cout << endl;
            convert();
            cout << endl;
            
            if (answer != "town" && answer != "helm" && answer != "chainmail" && answer != "chestplate" && answer != "spaulders" && answer != "greaves" && answer != "gauntlets" && answer != "shield")
            {
                cout << "That is an invalid answer." << endl;
                cout << endl;
                goto armor_shop;
            }
            
            if (answer == "town")
            {
                return;
            }
            
            if (answer == "helm")
            {
                if (helm == true)
                {
                    cout << "You already own the helm." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough money to buy the helm." << endl;
                }
                
                else if (money >= 3000 && helm == false)
                {
                    helm = true;
                    money -= 3000;
                    cout << "You have bought the helm! It will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "chainmail")
            {
                if (chainmail == true)
                {
                    cout << "You already own the chainmail." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 5000)
                {
                    cout << "You do not have enough money to buy the chainmail." << endl;
                }
                
                else if (money >= 5000 && chainmail == false)
                {
                    chainmail = true;
                    money -= 3000;
                    cout << "You have bought the chainmail! It will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "chestplate")
            {
                if (chestplate == true)
                {
                    cout << "You already own the chestplate." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 5000)
                {
                    cout << "You do not have enough money to buy the helm." << endl;
                }
                
                else if (money >= 5000 && chestplate == false)
                {
                    chestplate = true;
                    money -= 5000;
                    cout << "You have bought the chestplate will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "spaulders")
            {
                if (spaulders == true)
                {
                    cout << "You already own the spaulders." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough money to buy the spaulders." << endl;
                }
                
                else if (answer == "spaulders" && money >= 3000 && spaulders == false)
                {
                    spaulders = true;
                    money -= 3000;
                    cout << "You have bought the spaulders! They will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "greaves")
            {
                if (greaves == true)
                {
                    cout << "You already own the greaves." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough money to buy the greaves." << endl;
                }
                
                else if (answer == "greaves" && money >= 3000 && greaves == false)
                {
                    greaves = true;
                    money -= 3000;
                    cout << "You have bought the greaves! They will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "gauntlets")
            {
                if (gauntlets == true)
                {
                    cout << "You already own the gauntlets." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough money to buy the gauntlets." << endl;
                }
                
                else if (answer == "gauntlets" && money >= 3000 && gauntlets == false)
                {
                    gauntlets = true;
                    money -= 3000;
                    cout << "You have bought the gauntlets! They will protect you!" << endl;
                    cout << endl;
                }
            }
            
            if (answer == "shield")
            {
                if (shield == true)
                {
                    cout << "You already own the shield." << endl;
                    cout << endl;
                    goto armor_shop;
                }
                
                else if (money < 15000)
                {
                    cout << "You do not have enough money to buy the shield." << endl;
                }
                
                else if (money >= 15000 && shield == false)
                {
                    shield = true;
                    money -= 15000;
                    cout << "You have bought the shield! It will protect you!" << endl;
                    cout << endl;
                }
            }
            
            cout << "Would you like to buy more armor?" << endl;
            cout << endl;
            armor:
            convert();
                
            if (answer != "yes" && answer != "no")
            {
                cout << "That is an invalid answer." << endl;
                cout << endl;
                goto armor;
            }
                
            if (answer == "yes")
            {
                goto armor_shop;
            }
                
            if (answer == "no")
            {
                goto main_shop;
            }
        }
    }
        
    if (classGame == "archer")
    {
        if (answer == "arrow")
        {
            arrow_shop:
            cout << endl;
            cout << "Arrows are 1 for 4 gold coins." << endl;
            cout << "How many would you like to buy?" << endl;
            cin >> quantity;
            
            if (quantity > 0 && quantity < 100 && money >= 4 * quantity)
            {
                arrow += quantity;
                money -= quantity * 4;
                cout << "You now have " << arrow << " arrows and " << money << " gold coins!" << endl;
                cout << endl;
                cout << "Would you like to buy more arrows?" << endl;
                convert();
                
                if (answer == "yes")
                {
                    goto arrow_shop;
                }
                
                else 
                {
                    goto main_shop;
                }
            }
            
            else if (money < quantity * 4)
            {
                cout << "You do not have enough money to buy " << quantity << " arrows. You can only buy " << money / 4 << " arrows." << endl;
                return;
            }
            
            else 
            {
                cout << "That is an invalid amount." << endl;
                goto arrow_shop;
            }
        }
    }
    
    if (classGame == "wizard")
    {
        spell_shop:
        if (answer == "spell shop")
        {
            cout << "You can buy the following spells:" << endl;
            
            if (spellOfHealing == false)
            {
                cout << "Spell of Healing for 3000 gold coins" << endl;
            }
            
            if (spellOfDexterity == false)
            {
                cout << "Spell of Dexterity for 3000 gold coins" << endl;
            }
            
            if (spellOfDefense == false)
            {
                cout << "Spell of Defense for 3000 gold coins." << endl;
            }
            
            if (spellOfExplosiveness == false)
            {
                cout << "Spell of Explosiveness for 5000 gold coins" << endl;
            }
            
            cout << "What will you buy?" << endl;
            convert();
            
            if (answer == "spell of healing")
            {
                if (answer == "spell of healing" && spellOfHealing == false && money >= 3000)
                {
                    spellOfHealing = true;
                    money -= 3000;
                    cout << "You have bought the spell of healing! You can now heal yourself during battle!" << endl;
                    spell:
                    cout << "Would you like to buy another spell?" << endl;
                    convert();
                    
                    if (answer != "yes" && answer != "no")
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell;
                    }
                    
                    if (answer == "yes")
                    {
                        goto spell_shop;
                    }
                    
                    else if (answer == "no")
                    {
                        goto main_shop;
                    }
                    
                    else
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell;
                    }
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough gold coins." << endl;
                    cout << endl;
                    goto spell_shop;
                }
            }
            
            if (answer == "spell of dexterity")
            {
                if (answer == "spell of dexterity" && spellOfDexterity == false && money >= 3000)
                {
                    spellOfDexterity = true;
                    money -= 3000;
                    cout << "You have bought the spell of dexterity! You can now increase your evasion!" << endl;
                    spell_2:
                    cout << "Would you like to buy another spell?" << endl;
                    convert();
                    
                    if (answer != "yes" && answer != "no")
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_2;
                    }
                    
                    if (answer == "yes")
                    {
                        goto spell_shop;
                    }
                    
                    else if (answer == "no")
                    {
                        goto main_shop;
                    }
                    
                    else
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_2;
                    }
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough gold coins." << endl;
                    cout << endl;
                    goto spell_shop;
                }
            } 
            
            if (answer == "spell of defense")
            {
                if (answer == "spell of defense" && spellOfDefense == false && money >= 3000)
                {
                    spellOfDefense = true;
                    money -= 3000;
                    cout << "You have bought the spell of defense! You can now decrease the damage you take!" << endl;
                    spell_3:
                    cout << "Would you like to buy another spell?" << endl;
                    convert();
                    
                    if (answer != "yes" && answer != "no")
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_3;
                    }
                    
                    if (answer == "yes")
                    {
                        goto spell_shop;
                    }
                    
                    else if (answer == "no")
                    {
                        goto main_shop;
                    }
                    
                    else
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_3;
                    }
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough gold coins." << endl;
                    cout << endl;
                    goto spell_shop;
                }
            }
            
            if (answer == "spell of explosiveness")
            {
                if (answer == "spell of explosiveness" && spellOfExplosiveness == false && money >= 5000)
                {
                    spellOfExplosiveness = true;
                    money -= 5000;
                    cout << "You have bought the spell of explosiveness! You can now increase the damage you do!" << endl;
                    spell_4:
                    cout << "Would you like to buy another spell?" << endl;
                    convert();
                    
                    if (answer != "yes" && answer != "no")
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_4;
                    }
                    
                    if (answer == "yes")
                    {
                        goto spell_shop;
                    }
                    
                    else if (answer == "no")
                    {
                        goto main_shop;
                    }
                    
                    else
                    {
                        cout << "That is an invalid answer. Please try again." << endl;
                        goto spell_4;
                    }
                }
                
                else if (money < 3000)
                {
                    cout << "You do not have enough gold coins." << endl;
                    cout << endl;
                    goto spell_shop;
                }
            }
            
            if (answer == "town")
            {
                return;
            }
            
            else 
            {
                cout << "That is not a valid answer. Please try again." << endl;
                goto spell_shop;
            }
        }
    }

}

void ightormeld()
{
    cout << endl;
    cout << "Welcome to the ruins of Ightormeld." << endl;
    cout << "Will you begin your quest by walking into the courtyard?" << endl;
    cout << "Or will you travel back to Warkim?" << endl;
    ruins:
    cout << endl;
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto ruins;
    }
        
    if (answer == "quest")
    {
        hoard = 15;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Warkim";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto ruins;
    }
}

void goroth()
{
    cout << "Welcome to the temple of Goroth." << endl;
    cout << "Will you begin your quest by walking into the temple?" << endl;
    cout << "Or will you travel back to Thylas?" << endl;
    temple:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto temple;
    }
        
    if (answer == "quest")
    {
        hoard = 15;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Thylas";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto temple;
    }
}

void mesedt()
{
    cout << "Welcome to the mines of Mesedt." << endl;
    cout << "Will you begin your quest by walking into the mines?" << endl;
    cout << "Or will you travel back to Driskelang?" << endl;
    mines:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto mines;
    }
        
    if (answer == "quest")
    {
        hoard = 20;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Driskelang";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto mines;
    }
}

void umkelu()
{
    cout << "Welcome to the desert of Umkelu." << endl;
    cout << "Will you begin your quest by walking into the desert?" << endl;
    cout << "Or will you travel back to Deltai?" << endl;
    desert:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto desert;
    }
        
    if (answer == "quest")
    {
        hoard = 25;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Deltai";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto desert;
    }
}

void alether()
{
    cout << "Welcome to the island of Alether." << endl;
    cout << "Will you begin your quest by walking onto the island?" << endl;
    cout << "Or will you travel back to Kinoll-rad?" << endl;
    island:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto island;
    }
        
    if (answer == "quest")
    {
        hoard = 30;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Kinoll-rad";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto island;
    }
}

void mosmkin()
{
    cout << "Welcome to the plains of Mosmkin." << endl;
    cout << "Will you begin your quest by walking onto the plains?" << endl;
    cout << "Or will you travel back to Agegar?" << endl;
    plains:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto plains;
    }
        
    if (answer == "quest")
    {
        hoard = 35;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Agegar";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto plains;
    }
}

void tinimet()
{
    cout << "Welcome to the skies of Tinimet." << endl;
    cout << "Will you begin your quest by entering the temple in the skies?" << endl;
    cout << "Or will you travel back to Ryathine?" << endl;
    skies:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto skies;
    }
        
    if (answer == "quest")
    {
        hoard = 40;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Ryathine";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto skies;
    }
}

void lair()
{
    cout << "Welcome to the lair of the Dragon, Vororokth." << endl;
    cout << "Will you begin your quest by entering the dragon's lair" << endl;
    cout << "Or will you travel back to Zhyfrod?" << endl;
    lair:
    cout << "What will you do?" << endl;
    cout << "Quest" << endl;
    cout << "Travel" << endl;
    convert();

    if (answer != "quest" && answer != "travel")
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto lair;
    }
        
    if (answer == "quest")
    {
        hoard = 50;
        questing = true;
        return;
    }

    else if (answer == "travel")
    {
        currentLocation = "Zhyfrod";
    }
    
    else 
    {
        cout << "That is not a valid command. Please try again." << endl;
        goto lair;
    }
}

void travel()
{
    travel:
    cout << endl;
    cout << "You can travel to these places:" << endl;
    cout << endl;
    
        
    if (currentLocation != "Angiru" && (currentLocation == "Warkim" || currentLocation == "Thylas"))
    {
        cout << "Angiru" << endl;
    }
     
    if (currentLocation != "Warkim" && (currentLocation == "Driskelang" || currentLocation == "Thylas" || currentLocation == "Angiru"))
    {
        cout << "Warkim" << endl;
    }
    
    if (currentLocation != "Thylas" && (currentLocation == "Angiru" || currentLocation == "Deltai" || currentLocation == "Warkim"))
    {
        cout << "Thylas" << endl;
    }
    
    if (currentLocation != "Deltai" && (currentLocation == "Driskelang" || currentLocation == "Ryathine" || currentLocation == "Thylas" || currentLocation == "Kinoll-rad"))
    {
        cout << "Deltai" << endl;
    }
    
    if (currentLocation != "Driskelang" && (currentLocation == "Warkim" || currentLocation == "Deltai" || currentLocation == "Agegar"))
    {
        cout << "Driskelang" << endl;
    }
    
    if (currentLocation != "Agegar" && (currentLocation == "Driskelang" || currentLocation == "Ryathine"))
    {
        cout << "Agegar" << endl;
    }
    
    if (currentLocation != "Ryathine" && (currentLocation == "Deltai" || currentLocation == "Kinoll-rad" || currentLocation == "Agegar"))
    {
        cout << "Ryathine" << endl;
    }
    
    if (currentLocation != "Kinoll-rad" && (currentLocation == "Deltai" || currentLocation == "Ryathine" || currentLocation == "Zhyfrod"))
    {
        cout << "Kinoll-rad" << endl;
    }
   
    if (currentLocation != "Zhyfrod" && currentLocation == "Kinoll-rad")
    {
        cout << "Zhyfrod" << endl;
    }
    
    if (currentLocation == "Warkim" && d1clear == false)
    {
        cout << "The Ruins of Ightormeld" << endl;
    }
    
    if (currentLocation == "Thylas" && d1clear == true && d2clear == false)
    {
        cout << "The Temple of Goroth" << endl;
    }
    
    if (currentLocation == "Deltai" && d3clear == true && d4clear == false)
    {
        cout << "The Desert of Umkelu" << endl;
    }
    
    if (currentLocation == "Driskelang" && d2clear == true && d3clear == false)
    {
        cout << "The Mines of Mesedt" << endl;
    }
    
    if (currentLocation == "Agegar" && d5clear == true && d6clear == false)
    {
        cout << "The Plains of Mosmkin" << endl;
    }
    
    if (currentLocation == "Ryathine" && d6clear == true && d7clear == false)
    {
        cout << "The Skies of Tinimet" << endl;
    }
    
    if (currentLocation == "Kinoll-rad" && d4clear == true && d5clear == false)
    {
        cout << "The Island of Alether" << endl;
    }
    
    if (currentLocation == "Zhyfrod" && dragonQuest == true && d7clear == true && d8clear == false)
    {
        cout << "The Dragon's Lair" << endl;
    }
    
    cout << endl;
    cout << "Where would you like to travel to?" << endl;
    convert();
    
    if (answer == "angiru" && (currentLocation == "Warkim" || currentLocation == "Thylas"))
    {
        cout << "Welcome to the village of Angiru!" << endl;
        currentLocation = "Angiru";
    }
    
    else if (answer == "warkim" && (currentLocation == "Driskelang" || currentLocation == "Thylas" || currentLocation == "Angiru"))
    {
        currentLocation = "Warkim";
        warkim:
        cout << "Welcome to the village of Warkim!" << endl;
        
        if (mazeStep == 1)
        {
            mazeStep = 2;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "thylas" && (currentLocation == "Angiru" || currentLocation == "Deltai" || currentLocation == "Warkim"))
    {
        currentLocation = "Thylas";
        cout << "Welcome to the village of Thylas!" << endl;
        thylas:
        
        if (mazeStep == 2)
        {
            mazeStep = 3;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "deltai" && (currentLocation == "Driskelang" || currentLocation == "Ryathine" || currentLocation == "Thylas" || currentLocation == "Kinoll-rad"))
    {
        deltai:
        cout << "Welcome to the village of Deltai!" << endl;
        currentLocation = "Deltai";
        
        if (mazeStep == 3)
        {
            mazeStep = 4;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "driskelang" && (currentLocation == "Warkim" || currentLocation == "Deltai" || currentLocation == "Agegar"))
    {
        cout << "Welcome to the village of Driskelang!" << endl;
        currentLocation = "Driskelang";
        driskelang:
        
        if (mazeStep == 4)
        {
            mazeStep = 5;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "agegar" && (currentLocation == "Driskelang" || currentLocation == "Ryathine"))
    {
        agegar:
        cout << "Welcome to the village of Agegar!" << endl;
        currentLocation = "Agegar";
        
        if (mazeStep == 5)
        {
            mazeStep = 6;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "ryathine" && (currentLocation == "Deltai" || currentLocation == "Kinoll-rad" || currentLocation == "Agegar"))
    {
        currentLocation = "Ryathine";
        ryathine:
        cout << "Welcome to the village of Ryathine!" << endl;
        
        if (mazeStep == 6)
        {
            mazeStep = 7;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }

    else if (answer == "kinoll-rad" && (currentLocation == "Deltai" || currentLocation == "Ryathine" || currentLocation == "Zhyfrod"))
    {
        kinoll_rad:
        cout << "Welcome to the coastal village of Kinoll-rad!" << endl;
        currentLocation = "Kinoll-rad";
        
        if (mazeStep == 7)
        {
            mazeStep = 8;
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "zhyfrod" && currentLocation != "Zhyfrod" && currentLocation == "Kinoll-rad")
    {
        zhyfrod:
        cout << "Welcome to the city of Zhyfrod, the capital of Creturon!" << endl;
        currentLocation = "Zhyfrod";
        
        if (mazeStep == 8 && dragonQuest == false && d7clear == true && d8clear == false)
        {
            cout << "You have completed the maze. If you wish to unlock a new quest, type 'Vororokth'" << endl;
            convert();
            
            if (answer != "vororokth")
            {
                mazeStep = 0;
            }
            
            else if (answer == "vororokth")
            {
                dragonQuest = true;
                cout << "You can now play the quest 'The Dragons Lair', which is the final and eighth dungeon!" << endl;
            }
        }
        
        else 
        {
            mazeStep = 0;
        }
    }
    
    else if (answer == "maze" && currentLocation == "Angiru")
    {
        cout << "You hear a distant rumbling..." << endl;
        mazeStep = 1;
        goto travel;
    }
    
    else if (answer == "ightormeld" && d1clear == false && currentLocation == "Warkim" && currentLocation != "Ightormeld")
    {
        currentLocation = "Ightormeld";
        ightormeld();
        
        if (currentLocation == "Warkim")
        {
            goto warkim;
        }
    }
    
    else if (answer == "goroth" && d1clear == true && d2clear == false && currentLocation == "Thylas" && currentLocation != "Goroth")
    {
        currentLocation = "Goroth";
        goroth();
        
        if (currentLocation == "Thylas")
        {
            goto thylas;
        }
    }
    
    else if (answer == "mesedt" && d2clear == true && d3clear == false && currentLocation == "Driskelang" && currentLocation != "Mesedt")
    {
        currentLocation = "Mesedt";
        goroth();
        
        if (currentLocation == "Driskelang")
        {
            goto driskelang;
        }
    }
    
    else if (answer == "umkelu" && d3clear == true && d4clear == false && currentLocation == "Deltai" && currentLocation != "Umkelu")
    {
        cout << "Welcome to the desert of Umkelu!" << endl;
        umkelu();
        
        if (currentLocation == "Deltai")
        {
            goto deltai;
        }
    }
    
    else if (answer == "alether" && d4clear == true && d5clear == false && currentLocation == "Deltai" && currentLocation != "Alether")
    {
        currentLocation = "Alether";
        alether();
        
        if (currentLocation == "Deltai")
        {
            goto kinoll_rad;
        }
    }
    
    else if (answer == "mosmkin" && d5clear == true && d6clear == false && currentLocation == "Agegar" && currentLocation != "Mosmkin")
    {
        currentLocation = "Mosmkin";
        mosmkin();
        
        if (currentLocation == "Agegar")
        {
            goto agegar;
        }
    }
    
    else if (answer == "tinimet" && d6clear == true && d7clear == false && currentLocation == "Ryathine" && currentLocation != "Tinimet")
    {
        currentLocation = "Tinimet";
        tinimet();
        
        if (currentLocation == "Ryathine")
        {
            goto ryathine;
        }
    }
    
    else if (answer == "lair" && d7clear == true && d8clear == false && currentLocation == "Zhyfrod" && currentLocation != "Lair" && dragonQuest == true)
    {
        currentLocation = "Lair";
        lair();
        
        if (currentLocation == "Zhyfrod")
        {
            goto zhyfrod;
        }
    }
    
    else 
    {
        cout << "That is either not a valid location, or you cannot go there from your current position." << endl;
        goto travel;
    }
}

void myTurn() 
{
    if (enemyLife == failsafe)
    {
        cout << "You have encountered a " << enemy << "! It is at " << enemyLife << " health!" << endl;
        failsafe += 1;
        
        if (elemental == 100)
        {
            cout << "It is a " << element << " elemental!" << endl;
        }
        cout << endl;
    }
    fight:
    cout << "What would you like to do?" << endl;
    cout << endl;
    cout << "Fight" << endl;
    
    if (food >= 20)
    {
        cout << "Eat" << endl;
    }
    
    if (food >= 20 || classGame == "archer")
    {
        cout << "Run" << endl;
    }
    convert();
    
    if (answer != "eat" && answer != "run" && answer != "fight")
    {
        cout << "That is not a valid command." << endl;
        cout << endl;
        goto fight;
    }
    
    if (answer == "eat" && food >= 20)
    {
        eat();
    }
    
    else if (answer == "run" && (food >= 10 || classGame == "archer"))
    {
        runAway();
    }
    
    else if (answer == "fight")
    {
        chooseWeapon();
    }
    
}

void reforge()
{
    reforge:
    cout << "Here, you  can reforge your items." << endl;
    cout << "It will cost 100 times your current reforge level." << endl;
    cout << "You can reforge the following:" << endl;
    cout << endl;
    
    if (classGame == "warrior")
    {
        if (shortSwordUpgrade == true && shortSword == true)
        {
            cout << "Short Sword" << endl;
        }
        
        if (longSwordUpgrade == true && longSword == true)
        {
            cout << "Long Sword" << endl;
        }
        
        if (broadswordUpgrade == true && broadsword == true)
        {
            cout << "Broadsword" << endl;
        }
        
        if (dualSwordUpgrade == true && dualSword == true)
        {
            cout << "Dual Sword" << endl;
        }
    }
    
    if (classGame == "archer")
    {
        if (shortBowUpgrade == true && shortBow == true)
        {
            cout << "Short Bow" << endl;
        }
        
        if (recurveBowUpgrade == true && recurveBow == true)
        {
            cout << "Recurve Bow" << endl;
        }
        
        if (longbowUpgrade == true && longbow == true)
        {
            cout << "Longbow" << endl;
        }
        
        if (kingsBowUpgrade == true && kingsBow == true)
        {
            cout << "Kings Bow" << endl;
        }
    }
    
    if (classGame == "wizard")
    {
        if (woodenWandUpgrade == true && woodenWand == true)
        {
            cout << "Wooden Wand" << endl;
        }
        
        if (ivoryWandUpgrade == true && ivoryWand == true)
        {
            cout << "Ivory Wand" << endl;
        }
        
        if (platedWandUpgrade == true && platedWand == true)
        {
            cout << "Plated Wand" << endl;
        }
        
        if (legendaryWandUpgrade == true && legendaryWand == true)
        {
            cout << "Legendary Wand" << endl;
        }
    }
    
    if (classGame == "druid")
    {
        if (woodenStaffUpgrade == true && woodenStaff == true)
        {
            cout << "Wooden Staff" << endl;
        }
        
        if (imbuedStaffUpgrade == true && imbuedStaff == true)
        {
            cout << "Imbued Staff" << endl;
        }
        
        if (natureStaffUpgrade == true && natureStaff == true)
        {
            cout << "Nature Staff" << endl;
        }
        
        if (masterStaffUpgrade == true && masterStaff == true)
        {
            cout << "Master Staff" << endl;
        }
    }
    
    cout << endl;
    cout << "What will you get?" << endl;
    cout << endl;
    convert();
    
    if (answer == "town")
    {
        return;
    }
    
    if (forgingTrinket == true)
    {
        int upgrade = random() % 5 + 1;
        
        if (classGame == "warrior")
        {
            if (answer != "short sword" && answer != "long sword" && answer != "broadsword" && answer != "dual sword")
            {
                cout << "That is an invalid weapon. Please try again." << endl;
                cout << endl;
                goto reforge;
            }
            
            if (answer == "short sword")
            {
                if (money < 100 * shortSwordForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (shortSwordUpgrade == false)
                {
                    cout << "You do not own the short sword upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                else if (shortSword == false)
                {
                    cout << "You do not own the short sword." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (money >= 100 * shortSwordForge && shortSword == true && shortSwordUpgrade == true)
                {
                    money -= 100 * shortSwordForge;
                    shortSwordForge = upgrade;
                }
            }
            
            if (answer == "long sword")
            {
                if (money < 100 * longSwordForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (longSwordUpgrade == false)
                {
                    cout << "You do not own the long sword upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (longSword == false)
                {
                    cout << "You do not own the long sword." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                if (longSword == true && money >= 100 * longSwordForge && longSwordForge == true)
                {
                    money -= 100 * longSwordForge;
                    longSwordForge = upgrade;
                }
            }
            
            if (answer == "broadsword")
            {
                if (money < 100 * broadswordForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (broadswordForge == false)
                {
                    cout << "You do not own the broadsword upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                else if (broadsword == false)
                {
                    cout << "You do not own the broadsword." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (broadsword == true && money >= 100 * broadswordForge && broadswordUpgrade == true)
                {
                    money -= 100 * broadswordForge;
                    broadswordForge = upgrade;
                }
            }
            
            if (answer == "dual sword")
            {
                if (money < 100 * dualSwordForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (dualSwordUpgrade == false)
                {
                    cout << "You do not own the dual sword upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (dualSword == false)
                {
                    cout << "You do not own the dual sword." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (dualSword == true && money >= 100 * dualSwordForge && dualSwordUpgrade == true)
                {
                    money -= 100 * dualSwordForge;
                    dualSwordForge = upgrade;
                }
            }
            cout << "You got the level " << upgrade << " upgrade!" << endl;
            cout << endl;
        }
        
        if (classGame == "archer")
        {
            if (answer != "short bow" && answer != "recurve bow" && answer != "longbow" && answer != "kings bow")
            {
                cout << "That is an invalid weapon. Please try again." << endl;
                goto reforge;
            }
            
            if (answer == "short bow")
            {
                if (shortBowUpgrade == false)
                {
                    cout << "You do not own the short bow upgrade." << endl;
                    goto reforge;
                }
                
                else if (shortBow == false)
                {
                    cout << "You do not own the short bow." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * shortBowForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (shortBow == true && money >= 100 * shortBowForge && shortBowUpgrade == true)
                {
                    money -= 100 * shortBowForge;
                    shortBowForge = upgrade;
                }
            }
            
            if (answer == "recurve bow")
            {
                if (recurveBowUpgrade == false)
                {
                    cout << "You do not own the recurve bow upgrade." << endl;
                    goto reforge;
                }
                
                else if (recurveBow == false)
                {
                    cout << "You do not own the recurve bow." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * recurveBowForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (recurveBow == true && recurveBowUpgrade == true &&money >= 100 * recurveBowForge)
                {
                    money -= 100 * recurveBowForge;
                    recurveBowForge = upgrade;
                }
            }
            
            if (answer == "longbow")
            {
                if (money < 100 * longBowForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                } 
                
                else if (longbowUpgrade == false)
                {
                    cout << "You do not own the longbow upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (longbow == false)
                {
                    cout << "You do not own the longbow." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (longbowUpgrade == true && longbow == true && money >= 100 * longBowForge)
                {
                    money -= 100 * longBowForge;
                    longBowForge = upgrade;
                }
            }
            
            if (answer == "kings bow")
            {
                if (money < 100 * kingsBowForge)
                {
                    cout << "You do not have enough money." << endl;
                    cout << endl;
                    goto reforge;
                } 
                
                else if (kingsBowForge == false)
                {
                    cout << "You do not own the kings bow upgrade." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (kingsBow == false)
                {
                    cout << "You do not own the kings bow." << endl;
                    cout << endl;
                    goto reforge;
                }
                
                else if (kingsBowUpgrade == true && kingsBow == true && money >= 100 * kingsBowForge)
                {
                    money -= 100 * kingsBowForge;
                    kingsBowForge = upgrade;
                }
            }
            cout << "You got the level " << upgrade << " upgrade!" << endl;
        }
        
        if (classGame == "wizard")
        {
            if (answer != "wooden wand" && answer != "ivory wand" && answer != "plated wand" && answer != "legendary wand")
            {
                cout << "That is an invalid weapon. Please try again." << endl;
                goto reforge;
            }
            
            if (answer == "wooden wand")
            {
                if (woodenWandUpgrade == false)
                {
                    cout << "You do not own the wooden wand upgrade." << endl;
                    goto reforge;
                }
                
                else if (woodenWand == false)
                {
                    cout << "You do not own the wooden wand." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * woodenWandForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                else if (woodenWand == true && woodenWandForge == true && money >= 100 * woodenWandForge)
                {
                    money -= 100 * woodenWandForge;
                    woodenWandForge = upgrade;
                }
            }
            
            if (answer == "ivory wand")
            {
                if (ivoryWandUpgrade == false)
                {
                    cout << "You do not own the ivory wand upgrade." << endl;
                    goto reforge;
                }
                
                else if (ivoryWand == false)
                {
                    cout << "You do not own the ivory wand." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * ivoryWandForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (ivoryWand == true && ivoryWandUpgrade == true && money >= 100 * ivoryWandForge)
                {
                    money -= 100 * ivoryWandForge;
                    ivoryWandForge = upgrade;
                }
            }
            
            if (answer == "plated wand")
            {
                if (platedWandUpgrade == false)
                {
                    cout << "You do not own the plated wand upgrade." << endl;
                    goto reforge;
                }
                
                else if (platedWand == false)
                {
                    cout << "You do not own the plated wand." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * platedWandForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
            
                else if (platedWand == true && platedWandUpgrade == true && money >= 100 * platedWandForge)
                {
                    money -= 100 * platedWandForge;
                    platedWandForge = upgrade;
                }
            }
            
            if (answer == "legendary wand")
            {
                if (legendaryWandUpgrade == false)
                {
                    cout << "You do not own the legendary wand upgrade." << endl;
                    goto reforge;
                }
                
                else if (legendaryWand == false)
                {
                    cout << "You do not own the legendary wand." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * legendaryWandForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
            
                else if (legendaryWandUpgrade == true && legendaryWand == true && money >= 100 * legendaryWandForge)
                {
                    money -= 100 * legendaryWandForge;
                    legendaryWandForge = upgrade;
                }
            }
            cout << "You got the level " << upgrade << " upgrade!" << endl;
        }
        
        if (classGame == "druid")
        {
            if (answer != "wooden staff" && answer != "imbued staff" && answer != "nature staff" && answer != "master staff")
            {
                cout << "That is an invalid weapon. Please try again." << endl;
                goto reforge;
            }
            
            if (answer == "wooden staff")
            {
                if (woodenStaffUpgrade == false)
                {
                    cout << "You do not own the wooden staff upgrade." << endl;
                    goto reforge;
                }
                
                else if (woodenStaff == false)
                {
                    cout << "You do not own the wooden staff." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * woodenStaffForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (woodenStaff == true && woodenStaffUpgrade == true && money >= 100 * woodenStaffForge)
                {
                    money -= 100 * woodenStaffForge;
                    woodenStaffForge = upgrade;
                }
            }
            
            if (answer == "imbued staff")
            {
                if (imbuedStaffUpgrade == false)
                {
                    cout << "You do not own the imbued staff upgrade." << endl;
                    goto reforge;
                }
                
                else if (imbuedStaff == false)
                {
                    cout << "You do not own the imbued staff." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * imbuedStaffForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (imbuedStaff == true && imbuedStaffForge == true && money >= 100 * imbuedStaffForge)
                {
                    money -= 100 * imbuedStaffForge;
                    imbuedStaffForge = upgrade;
                }
            }
            
            if (answer == "nature staff")
            {
                if (natureStaffUpgrade == false)
                {
                    cout << "You do not own the nature staff upgrade." << endl;
                    goto reforge;
                }
                
                else if (natureStaff == false)
                {
                    cout << "You do not own the nature staff." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * natureStaffForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (natureStaff == true && natureStaffUpgrade == true && money >= 100 * natureStaffForge)
                {
                    money -= 100 * natureStaffForge;
                    natureStaffForge = upgrade;
                }
            }
            
            if (answer == "master staff")
            {
                if (masterStaffUpgrade == false)
                {
                    cout << "You do not own the master staff upgrade." << endl;
                    goto reforge;
                }
                
                else if (masterStaff == false)
                {
                    cout << "You do not own the master staff." << endl;
                    goto reforge;
                }
                
                else if (money < 100 * masterStaffForge)
                {
                    cout << "You do not have enough money." << endl;
                    goto reforge;
                }
                
                else if (answer == "master staff" && money >= 100 * masterStaffForge)
                {
                    money -= 100 * masterStaffForge;
                    masterStaffForge = upgrade;
                }
            }
            cout << "You got the level " << upgrade << " upgrade!" << endl;
        }
    }
    
    if (elementalForgingTrinket == true)
    {
        choosey:
        cout << "Will you elementally reforge it?" << endl;
        convert();
        
        if (answer != "yes" && answer != "no")
        {
            cout << "That is not a valid action. Please try again." << endl;
            goto choosey;
        }
        
        if (answer == "yes")
        {
            element:
            srand(time(NULL));
            int elementy = rand() % 4 + 1;
            
            if (classGame == "warrior")
            {
                if (answer == "short sword")
                {
                    if (elementy == 1 && shortSwordElement != "fire")
                    {
                        shortSwordElement = "fire";
                        cout << "Your short sword gained the element of fire!" << endl;
                    }
                    
                    else if (elementy == 2 && shortSwordElement != "water")
                    {
                        shortSwordElement = "water";
                        cout << "Your short sword gained the element of water!" << endl;
                    }
                    
                    else if (elementy == 3 && shortSwordElement != "earth")
                    {
                        shortSwordElement = "earth";
                        cout << "Your short sword gained the element of earth!" << endl;
                    }
                    
                    else if (elementy == 4 && shortSwordElement != "air")
                    {
                        shortSwordElement = "air";
                        cout << "Your short sword gained the element of air!" << endl;
                    }
                    
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "long sword")
                {
                    if (elementy == 1 && longSwordElement != "fire")
                    {
                        longSwordElement = "fire";
                        cout << "Your long sword gained the element of fire!" << endl;
                    }
                    
                    else if (elementy == 2 && longSwordElement != "water")
                    {
                        longSwordElement = "water";
                        cout << "Your long sword gained the element of water!" << endl;
                    }
                    
                    else if (elementy == 3 && longSwordElement != "earth")
                    {
                        longSwordElement = "earth";
                        cout << "Your long sword gained the element of earth!" << endl;
                    }
                    
                    else if (elementy == 4 && longSwordElement != "air")
                    {
                        longSwordElement = "air";
                        cout << "Your long sword gained the element of air!" << endl;
                    }
                    
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "broadsword")
                {
                    if (elementy == 1 && broadswordElement != "fire")
                    {
                        broadswordElement = "fire";
                        cout << "Your broadsword gained the element of fire!" << endl;
                    }
                    
                    else if (elementy == 2 && broadswordElement != "water")
                    {
                        broadswordElement = "water";
                        cout << "Your broadsword gained the element of water!" << endl;
                    }
                    
                    else if (elementy == 3 && broadswordElement != "earth")
                    {
                        broadswordElement = "earth";
                        cout << "Your broadsword gained the element of earth!" << endl;
                    }
                    
                    else if (elementy == 4 && broadswordElement != "air")
                    {
                        broadswordElement = "air";
                        cout << "Your broadsword gained the element of air!" << endl;
                    }
                    
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "dual sword")
                {
                    if (elementy == 1 && dualSwordElement != "fire")
                    {
                        dualSwordElement = "fire";
                        cout << "Your dual sword gained the element of fire!" << endl;
                    }
                    
                    else if (elementy == 2 && dualSwordElement != "water")
                    {
                        dualSwordElement = "water";
                        cout << "Your dual sword gained the element of water!" << endl;
                    }
                    
                    else if (elementy == 3 && dualSwordElement != "earth")
                    {
                        dualSwordElement = "earth";
                        cout << "Your dual sword gained the element of earth!" << endl;
                    }
                    
                    else if (elementy == 4 && dualSwordElement != "air")
                    {
                        dualSwordElement = "air";
                        cout << "Your dual sword gained the element of air!" << endl;
                    }
                    
                    else 
                    {
                        goto element;
                    }
                }
            }
            
            if (classGame == "archer")
            {
                if (answer == "short bow")
                {
                    if (elementy == 1 && shortBowElement != "fire")
                    {
                        shortBowElement = "fire";
                        cout << "Your short bow gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && shortBowElement != "water")
                    {
                        shortBowElement = "water";
                        cout << "Your short bow gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && shortBowElement != "earth")
                    {
                        shortBowElement = "earth";
                        cout << "Your short bow gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && shortBowElement != "air")
                    {
                        shortBowElement = "air";
                        cout << "Your short bow gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "recurve bow")
                {
                    if (elementy == 1 && recurveBowElement != "fire")
                    {
                        recurveBowElement = "fire";
                        cout << "Your recurve bow gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && recurveBowElement != "water")
                    {
                        recurveBowElement = "water";
                        cout << "Your recurve bow gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && recurveBowElement != "earth")
                    {
                        recurveBowElement = "earth";
                        cout << "Your recurve bow gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && recurveBowElement != "air")
                    {
                        recurveBowElement = "air";
                        cout << "Your long sword gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "longbow")
                {
                    if (elementy == 1 && longBowElement != "fire")
                    {
                        longBowElement = "fire";
                        cout << "Your longbow gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && longBowElement != "water")
                    {
                        longBowElement = "water";
                        cout << "Your longbow gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && longBowElement != "earth")
                    {
                        longBowElement = "earth";
                        cout << "Your longbow gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && longBowElement != "air")
                    {
                        longBowElement = "air";
                        cout << "Your longbow gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "kings bow")
                {
                    if (elementy == 1 && kingsBowElement != "fire")
                    {
                        kingsBowElement = "fire";
                        cout << "Your kings bow gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && kingsBowElement != "water")
                    {
                        kingsBowElement = "water";
                        cout << "Your kings bow gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && kingsBowElement != "earth")
                    {
                        kingsBowElement = "earth";
                        cout << "Your kings bow gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && kingsBowElement != "air")
                    {
                        kingsBowElement = "air";
                        cout << "Your kings bow gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }}
                
            if (classGame == "wizard")
            {
                if (answer == "wooden wand")
                {
                    if (elementy == 1 && woodenWandElement != "fire")
                    {
                        woodenWandElement = "fire";
                        cout << "Your wooden wand gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && woodenWandElement != "water")
                    {
                        woodenWandElement = "water";
                        cout << "Your wooden wand gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && woodenWandElement != "earth")
                    {
                        woodenWandElement = "earth";
                        cout << "Your wooden wand gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && woodenWandElement != "air")
                    {
                        woodenWandElement = "air";
                        cout << "Your wooden wand gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "ivory wand")
                {
                    if (elementy == 1 && ivoryWandElement != "fire")
                    {
                        ivoryWandElement = "fire";
                        cout << "Your ivory wand gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && ivoryWandElement != "water")
                    {
                        ivoryWandElement = "water";
                        cout << "Your ivory wand gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && ivoryWandElement != "earth")
                    {
                        ivoryWandElement = "earth";
                        cout << "Your ivory wand gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && ivoryWandElement != "air")
                    {
                        ivoryWandElement = "air";
                        cout << "Your ivory wand gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "plated wand")
                {
                    if (elementy == 1 && platedWandElement != "fire")
                    {
                        platedWandElement = "fire";
                        cout << "Your plated wand gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && platedWandElement != "water")
                    {
                        platedWandElement = "water";
                        cout << "Your plated wand gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && platedWandElement != "earth")
                    {
                        platedWandElement = "earth";
                        cout << "Your plated wand gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && platedWandElement != "air")
                    {
                        platedWandElement = "air";
                        cout << "Your plated wand gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "legendary wand")
                {
                    if (elementy == 1 && legendaryWandElement != "fire")
                    {
                        legendaryWandElement = "fire";
                        cout << "Your legendary wand gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && legendaryWandElement != "water")
                    {
                        legendaryWandElement = "water";
                        cout << "Your legendary wand gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && legendaryWandElement != "earth")
                    {
                        legendaryWandElement = "earth";
                        cout << "Your legendary wand gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && legendaryWandElement != "air")
                    {
                        legendaryWandElement = "air";
                        cout << "Your legendary wand gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
            }
            
            if (classGame == "druid")
            {
                if (answer == "wooden staff")
                {
                    if (elementy == 1 && woodenStaffElement != "fire")
                    {
                        woodenStaffElement = "fire";
                        cout << "Your wooden staff gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && woodenStaffElement != "water")
                    {
                        woodenStaffElement = "water";
                        cout << "Your wooden staff gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && woodenStaffElement != "earth")
                    {
                        woodenStaffElement = "earth";
                        cout << "Your wooden staff gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && woodenStaffElement != "air")
                    {
                        woodenStaffElement = "air";
                        cout << "Your wooden staff gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "imbued staff")
                {
                    if (elementy == 1 && imbuedStaffElement != "fire")
                    {
                        imbuedStaffElement = "fire";
                        cout << "Your imbued staff gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && imbuedStaffElement != "water")
                    {
                        imbuedStaffElement = "water";
                        cout << "Your imbued staff gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && imbuedStaffElement != "earth")
                    {
                        imbuedStaffElement = "earth";
                        cout << "Your imbued staff gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && imbuedStaffElement != "air")
                    {
                        imbuedStaffElement = "air";
                        cout << "Your imbued staff gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "nature staff")
                {
                    if (elementy == 1 && natureStaffElement != "fire")
                    {
                        natureStaffElement = "fire";
                        cout << "Your nature staff gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && natureStaffElement != "water")
                    {
                        natureStaffElement = "water";
                        cout << "Your nature staff gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && natureStaffElement != "earth")
                    {
                        natureStaffElement = "earth";
                        cout << "Your nature staff gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && natureStaffElement != "air")
                    {
                        natureStaffElement = "air";
                        cout << "Your nature staff gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
                
                if (answer == "master staff")
                {
                    if (elementy == 1 && masterStaffElement != "fire")
                    {
                        masterStaffElement = "fire";
                        cout << "Your master staff gained the element of fire!" << endl;
                    }
                        
                    else if (elementy == 2 && masterStaffElement != "water")
                    {
                        masterStaffElement = "water";
                        cout << "Your master staff gained the element of water!" << endl;
                    }
                        
                    else if (elementy == 3 && masterStaffElement != "earth")
                    {
                        masterStaffElement = "earth";
                        cout << "Your master staff gained the element of earth!" << endl;
                    }
                        
                    else if (elementy == 4 && masterStaffElement != "air")
                    {
                        masterStaffElement = "air";
                        cout << "Your master staff gained the element of air!" << endl;
                    }
                        
                    else 
                    {
                        goto element;
                    }
                }
            }
        }
    }
}

void tavern()
{
    cout << endl;
    cout << "You have successfully arrived at the tavern." << endl;
    tavern:
    cout << "What will you do?" << endl;
    cout << endl;
    cout << "Buy a drink" << endl;
    cout << "Play some poker" << endl;
      
    if ((shardOne == true && shardTwo == true && shardThree == true && shardFour == true) || (forgingTrinket == false && mesedtJewel == true && gorothGem == true && ightormeldCrystal == true) || (forgingTrinket == true && fireStone == true && waterStone == true && earthStone == true && airStone == true))
    {
        cout << "Talk to a hooded man" << endl;
    }
    convert();
    cout << endl;
            
    if (answer == "talk to the hooded man" && shardOne == true && shardTwo == true && shardThree == true && shardFour == true)
    {
        cout << "He says that he can make a powerful weapon out of the items in your inventory." << endl;
        weaponMaker:
        cout << "Will you do what he says?" << endl;
        cout << endl;
        convert();
          
        if (answer != "yes" && answer != "no")
        {
            cout << "That is not a valid action. Please try again." << endl;
            cout << endl;
            goto weaponMaker;
        }
           
        if (answer == "yes")
        {
            if (classGame == "warrior")
            {
                dualSword = true;
                shardOne = false;
                shardTwo = false;
                shardThree = false;
                shardFour = false;
                cout << "He took your shards and made the Dual Sword!" << endl;
            }
            
            if (classGame == "archer")
            {
                kingsBow = true;
                shardOne = false;
                shardTwo = false;
                shardThree = false;
                shardFour = false;
                cout << "He took your shards and made the Kings Bow!" << endl;
            }
            
            if (classGame == "wizard")
            {
                legendaryWand = true;
                shardOne = false;
                shardTwo = false;
                shardThree = false;
                shardFour = false;
                cout << "He took your shards and made the Legendary Wand!" << endl;
            }
             
            if (classGame == "druid")
            {
                masterStaff = true;
                shardOne = false;
                shardTwo = false;
                shardThree = false;
                shardFour = false;
                cout << "He took your shards and made the Master Staff!" << endl;
            }
            cout << "The man abruptly leaves, leaving you alone at the table" << endl;
            cout << endl;
            goto tavern;
            }
        }
        
        if (answer == "no")
        {
            goto tavern;
        }
        
        if (answer == "talk to the hooded man" && forgingTrinket == true && earthStone == true && airStone == true && fireStone == true && waterStone == true)
        {
            cout << "He says that he can make a valuable item out of what is in your inventory" << endl;
            hood:
            cout << "Will you do what he says?" << endl;
            cout << endl;
            convert();
               
            if (answer != "yes" && answer != "no")
            {
                cout << "That is not a valid answer. Please try again." << endl;
                goto hood;
            }
            
            if (answer == "yes")
            {
                elementalForgingTrinket = true;
                cout << "He took your Air Stone, Fire Stone, Water Stone, and Fire Stone, and from it, he created the Elemental Forging Trinket!" << endl;
                cout << "You can now reforge your items to get an elemental modifier on your weapon!" << endl;
                cout << "The man abruptly leaves, leaving you alone at the table" << endl;
                cout << endl;
                goto tavern;
            }
                
            else if (answer == "no")
            {
                goto tavern;
            }
        }
            
        if (answer == "talk to the hooded man" && forgingTrinket == false && mesedtJewel == false && gorothGem == false && ightormeldCrystal == false)
        {
            cout << "He says that he can make a valuable item out of what is in your inventory" << endl;
            cowl:
            cout << "Will you do what he says?" << endl;
            cout << endl;
            convert();
                
            if (answer != "yes" && answer != "no")
            {
                cout << "That is not a valid action. Please try again." << endl;
                goto cowl;
            }
            
            if (answer != "yes" && answer != "no")
            {
                cout << "That is not a valid action. Please try again." << endl;
                goto cowl;
            }
                
            if (answer == "yes")
            {
                mesedtJewel = false;
                gorothGem = false;
                ightormeldCrystal = false;
                forgingTrinket = true;
                cout << "He took your Ightormeld Crystal, Goroth Gem, and your Mesedt Jewel, and from it, he created the Forging Trinket!" << endl;
                cout << "You can now reforge your items to get either a degrade or an upgrade on your weapons." << endl;
                cout << "The man abruptly leaves, leaving you alone at the table" << endl;
                cout << endl;
                goto tavern;
            }
                
            else if (answer == "no")
            {
                goto tavern;
            }
        }
            
        if (answer == "play some poker")
        {
            poker:
            cout << "How much money would you like to put in?" << endl;
            cin >> quantity;
            srand(time(NULL));
            int poker = rand() % 8 + 1;
                
            if (poker == 1)
            {
                srand(time(NULL));
                int newMoney = rand() % 5 + 1;
                cout << endl;
                cout << "You won the poker game!" << endl;
                cout << "You got " << newMoney * quantity << " gold coins!" << endl;
                cout << endl;
                money += newMoney * quantity;
            }
                
            if (poker != 1)
            {
                cout << endl;
                cout << "You lost the poker game." << endl;
                cout << "You lost " << quantity << " gold coins." << endl;
                cout << endl;
                money -= quantity;
            }
                
            cout << "Would you like to play again?" << endl;
            convert();
                
            if (answer != "yes" && answer != "no")
            {
                cout << "That is not a valid answer" << endl;
            }
                
            if (answer == "yes")
            {
                goto poker;
            }
                
            if (answer == "no")
            {
                goto tavern;
            }
        }
            
        if (answer == "buy a drink")
        {
            if (maxLife < 500)
            {
                cout << "You bought an ale for 5 gold coins." << endl;
                money -= 5;
            }
                
            if (maxLife > 500 && maxLife < 1000)
            {
                cout << "You bought an ale for 15 gold coins." << endl;
                money -= 15;
            }
                
            if (maxLife >= 1000)
            {
                cout << "You have drunk all of the ale in the tavern!" << endl;
                goto tavern;
            }
            maxLife += 10;
            cout << "You feel stronger! 10 health stronger to be exact!" << endl;
        }
    }

void spoilsOfWar()
{
    if (enemyType < 50)
    {
        if (elemental == 100 && element == "water" && waterStone == false)
        {
            waterStone = true;
            cout << "You got the 'Water Shard'." << endl;
        }
                
        if (elemental == 100 && element == "fire" && fireStone == false)
        {
            fireStone = true;
            cout << "You got the 'Fire Shard'." << endl;
        }
            
        if (elemental == 100 && element == "air" && airStone == false)
        {
            airStone = true;
            cout << "You got the 'Air Shard'." << endl;
        }
            
        if (elemental == 100 && element == "earth" && earthStone == false)
        {
            earthStone = true;
            cout << "You got the 'Earth Shard'." << endl;
        }
        srand(time(NULL));
        int spoils = random() % 5 + 1;
        
        switch (spoils)
        {
            case 1:
            money += 10 * (enemyType);
            cout << "You got " << 10 * enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
            experience();
            levelUp();
            cout << endl;
            break;
            
            case 2:
            if (classGame == "archer")
            {
                arrow += 3 * enemyType;
                cout << "You got " << 5 * enemyType << " arrows! You now have " << arrow << " arrows!" << endl;
            }
            food += 10 * (enemyType);
            cout << "You got " << 10 * enemyType << " food! You now have " << food << " food!" << endl;
            experience();
            levelUp();
            cout << endl;
            break;
            
            case 3: 
            money += 5 * (enemyType);
            cout << "You got " << 5 * enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
            experience();
            levelUp();
            cout << endl;
            break;
            
            case 4:
            if (classGame == "archer")
            {
                arrow += 5 * enemyType;
                cout << "You got " << 5 * enemyType << " arrows! You now have " << arrow << " arrows!" << endl;
            }
            money += 15 * enemyType;
            cout << "You got " << 15 * enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
            experience();
            levelUp();
            cout << endl;
            break;
            
            case 5:
            money += 15 * (enemyType);
            cout << "You got " << 5*enemyType << " gold coins! You now have " << money << " gold coins!" << endl;
            experience();
            levelUp();
            cout << endl;
            break;
        }
    }
    
    if (enemyType >= 50)
    {
        srand(time(NULL));
        int spoils = random() % 20 + 10;
        
        if (enemyType == 50 && enemyLife <= 0)
        {
            currentLocation = "Warkim";
            ightormeldCrystal = true;
            d1clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the ruins of Ightormeld, Gakudoki, the Collector of Dreams!" << endl;
            cout << "You got something called an 'Ightormeld Crystal.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "MAZE. THE MAZE BEGINS IN THE BEGINNING." << endl;
        }
                
        if (enemyType == 51 && enemyLife <= 0)
        {
            currentLocation = "Thylas";
            gorothGem = true;
            d2clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the temple of Goroth, Dreallade, the Reaper of Souls!" << endl;
            cout << "You got something called an 'Goroth Gem.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "FROM THE MAZE COMES THE FIRST." << endl;
            int main();
        }
            
        if (enemyType == 52 && enemyLife <= 0)
        {
            currentLocation = "Driskelang";
            mesedtJewel = true;
            d3clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the mines of Mesedt, Kosami, the Bane of Life!" << endl;
            cout << "You got something called an 'Mesedt Jewel.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "THE FIRST TO THE HOLY PLACE" << endl;
            int main();
        }
            
        if (enemyType == 53 && enemyLife <= 0)
        {
            currentLocation = "Deltai";
            shardOne = true;
            d4clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the desert of Umkelu, Tinkimi, the Thief of Courage!" << endl;
            cout << "You got something called an 'Shard of Chivalry.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "NEXT IS THE CROSSROADS OF MANY" << endl;
            int main();
        }
            
        if (enemyType == 54 && enemyLife <= 0)
        {
            currentLocation = "Kinoll-rad";
            shardTwo = true;
            d5clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the island of Alether, Lloquear, the Courier of Death!" << endl;
            cout << "You got something called an 'Shard of Intuition.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "TO THE MOUNTAINS YOU MUST GO" << endl;
            int main();
        }
            
        if (enemyType == 55 && enemyLife <= 0)
        {
            currentLocation = "Agegar";
            shardThree = true;
            d6clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the plains of Mosmkin, Waonow, the Gladiator of Destruction!" << endl;
            cout << "You got something called an 'Shard of Courage.'" << endl;
            cout << "You hear a voice resounding from the heavens..." << endl;
            cout << "THE FARMER WILL BE THE GUIDE" << endl;
            int main();
        }
            
        if (enemyType == 56 && enemyLife <= 0)
        {
            currentLocation = "Ryathine";
            shardFour = true;
            d7clear = true;
            questing = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the skies of Timimet, Sihodima, the Seraph of Shadows!" << endl;
            cout << "You got something called an 'Shard of Strength.'" << endl;
            cout << "You hear a voice resounding from the heavens(yes, they still are above you)..." << endl;
            cout << "THE COAST IS YOUR PASSAGE THAT NO OTHER CAN GO" << endl;
            int main();
        }
            
        if (enemyType == 57 && enemyLife <= 0)
        {
            currentLocation = "Zhyfrod";
            d8clear = true;
            questing = false;
            dragonQuest = false;
            money += spoils * enemyType;
            cout << "You got " << spoils * enemyType << " gold coins from " << enemy << "!" << endl;
            experience();
            levelUp();
            cout << "You have felled the mighty boss of the dragons lair, Vororokth!" << endl;
            cout << endl;
            cout << "You have beaten the game, Dual Swords: An RPG Legend!" << endl;
            cout << "CONGRADULATIONS!" << endl;
            cout << endl;
            cout << "Continue?" << endl;
            convert();
                
            if (answer == "yes")
            {
                int main();
            }
                
            else
            {
                quit = true;
                int main();
            }
        }
    }
}

void gameOver()
{
    cout << "You have 0 life remaining. You are now dead." << endl;
    cout << "Continue?"<< endl;
    convert();
    
    if (answer == "yes")
    {
        myLife = maxLife;
        hoard = 5;
        currentLocation = "Angiru";
        questing = false;
        int main();
    }
        
    else
    {
        return;
    }
}

void enemyPicker()
{
    repick:
    elemental = 1;
    srand(time(NULL));
    elemental = rand() % 100 + 1;
    enemyLife = 1;
        
    if (true) //Location Enemy Strength Decision Algorithm
    { 
        if (currentLocation == "Angiru")
        {
            srand(time(NULL));                                          
            enemyType = rand() % 5 + 1;
        }
                
        else if (currentLocation == "Warkim" || currentLocation == "Ightormeld" || currentLocation == "Thylas" || currentLocation == "Goroth")
        {
            srand(time(NULL));                                          
            enemyType = rand() % 10 + 1;
        }
                
        else if (currentLocation == "Driskelang" || currentLocation == "Mesedt"  || currentLocation == "Deltai" || currentLocation == "Umkelu")
        {
            srand(time(NULL));                                          
            enemyType = rand() % 15 + 1;
        }
                
        else 
        {
            srand(time(NULL));                                          
            enemyType = rand() % 20 + 1;
        }
    }
        
    if (true) //Enemy Type Algorithm
    { 
        if (enemyType == 20)
        {
            enemy = "demon";
            enemyLife = 400;
        }
            
        else if (enemyType < 10)
        {
            enemy = "imp";
            enemyLife = 10 * enemyType;
        }
         
        else if (enemyType >= 10 && enemyType < 20)
        {
            enemy = "troll";
            enemyLife = 20 * enemyType;
        }
            
        else
        {
            cout << "There has been an error." << endl;
            goto repick;
        }
    }
        
    if (elemental == 100)
    {
        error:
        srand(time(NULL));                                          
        int elements = rand() % 4 + 1;
            
        if (elements == 1)
        {
            element = "fire";
            damage += 25;
        }
            
        else if (elements == 2)
        {
            element = "water";
            myDamage -= 25;
        }
            
        else if (elements == 3)
        {
            element = "earth";
            damage += 12;
            myDamage -= 13;
        }
            
        else if (elements == 4)
        {
            element = "air";
            srand(time(NULL));                                          
            int enemyAgility = rand() % 8 + 1;
                    
            if (enemyAgility == 8)
            {
                myDamage = 0;
            }
        }
            
        else 
        {
            cout << "There has been an error." << endl;
            goto error;
        }
    }
    failsafe = enemyLife;
}

void fightSequence()
{
    attack:
    myTurn();
    
    if (enemyLife <= 0)
    {
        if (enemyLife != -1289)
        {
            spoilsOfWar();
            
            if (hoard != 0)
            {
                hoard -= 1;
            }
        }
        enemyPicker();
        
        if (hoard == 0 && questing == false)
        {
            hoard = 5;
            return;
        }
        
        if (hoard == 0 && questing == true)
        {
            dungeonBoss();
        }
        goto attack;
    } 
    
    else if (enemyLife > 0 && enemyType < 50)
    {
        enemyAttack();
        
        if (myLife <= 0)
        {
            gameOver();
        }
        goto attack;
    }
    
    else if (enemyLife > 0 && enemyType >= 50)
    {
        bossAttack();
        
        if (myLife <= 0)
        {
            gameOver();
        }
        goto attack;
    }
} 

void town()
{
    town:
    if (quit == true)
    {
        return;
    }
    
    if (questing == false)
    {
        cout << "What would you like to do?" << endl;
        cout << endl;
        cout << "Adventure" << endl;
        cout << "Heal" << endl;
        cout << "Travel" << endl;
        
        if (forgingTrinket == true)
        {
            cout << "Reforge" << endl;
        }
        
        if (currentLocation == "Zhyfrod")
        {
            cout << "Tavern" << endl;
        }
        
        if (money >= 500)
        {
            cout << "Shop" << endl;
        }
        
        if (currentLocation == "Thylas")
        {
            cout << "Cathedral" << endl;
        }
        convert();
        
        if (answer != "cathedral" && answer != "reforge" && answer != "tavern"  && answer != "shop"  && answer != "adventure" && answer != "heal" && answer != "travel")
        {
            cout << "That is not a valid command." << endl;
            goto town;
        }
        
        if (answer == "cathedral" && currentLocation == "Thylas")
        {
            cout << "After a short sermon, you light a candle and leave the cathedral." << endl;
            goto town;
        }
        
        if (answer == "shop" && money >= 500)
        {
            visitShop();
            goto town;
        }
        
        else if (answer == "heal")
        {
            myLife = maxLife;
            cout << "You have been healed to " << maxLife << "." << endl;
            cout << endl;
            goto town;
        }  
        
        else if (answer == "tavern")
        {
            tavern();
        }
        
        else if (answer == "travel")
        {
            travel();
            goto town;
        }
        
        else if (answer == "reforge")
        {
            reforge();
        }
        
        else if (answer == "adventure")
        {
            fightSequence();
        }
        
        else
        {
            cout << "That is not a valid command. Please try again." << endl;
            goto town;
        }
    }
    
    if (questing == true)
    {
        fightSequence();
    }
    
    else
    {
        goto town;
    }
} 

int main()
{
    if (quit == true)
    {
        return 1;
    }
    
    if (play == false)
    {
        cout << "Welcome to the game Dual Swords: An RPG Legend." << endl;
        cout << "To learn about the commands in this game, type help at any time." << endl;
        cout << endl;
        classType();
        cout << endl;
        cout << "To begin the game, in the town of Angiru, press enter." << endl;
        cout << endl;
        play = true;
        convert();
    }
    
    if (questing == false)
    {
        enemyPicker();	
        town();
    }
}
